import { createBackInStockNotificationRequest as publicCreateBackInStockNotificationRequest, getBackInStockNotificationRequest as publicGetBackInStockNotificationRequest, deleteBackInStockNotificationRequest as publicDeleteBackInStockNotificationRequest, markAsNotificationSent as publicMarkAsNotificationSent, queryBackInStockNotificationRequests as publicQueryBackInStockNotificationRequests, getBackInStockNotificationRequestsCountByCatalogReferences as publicGetBackInStockNotificationRequestsCountByCatalogReferences, reportItemsBackInStock as publicReportItemsBackInStock } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.public';
import { createEventModule } from '@wix/sdk-runtime/event-definition-modules';
import { BuildRESTFunction, MaybeContext } from '@wix/sdk-types';
import { onBackInStockNotificationRequestCreated as publicOnBackInStockNotificationRequestCreated } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.public';
import { onBackInStockNotificationRequestDeleted as publicOnBackInStockNotificationRequestDeleted } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.public';
import { onBackInStockNotificationRequestUpdated as publicOnBackInStockNotificationRequestUpdated } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.public';
export declare const createBackInStockNotificationRequest: MaybeContext<BuildRESTFunction<typeof publicCreateBackInStockNotificationRequest> & typeof publicCreateBackInStockNotificationRequest>;
export declare const getBackInStockNotificationRequest: MaybeContext<BuildRESTFunction<typeof publicGetBackInStockNotificationRequest> & typeof publicGetBackInStockNotificationRequest>;
export declare const deleteBackInStockNotificationRequest: MaybeContext<BuildRESTFunction<typeof publicDeleteBackInStockNotificationRequest> & typeof publicDeleteBackInStockNotificationRequest>;
export declare const markAsNotificationSent: MaybeContext<BuildRESTFunction<typeof publicMarkAsNotificationSent> & typeof publicMarkAsNotificationSent>;
export declare const queryBackInStockNotificationRequests: MaybeContext<BuildRESTFunction<typeof publicQueryBackInStockNotificationRequests> & typeof publicQueryBackInStockNotificationRequests>;
export declare const getBackInStockNotificationRequestsCountByCatalogReferences: MaybeContext<BuildRESTFunction<typeof publicGetBackInStockNotificationRequestsCountByCatalogReferences> & typeof publicGetBackInStockNotificationRequestsCountByCatalogReferences>;
export declare const reportItemsBackInStock: MaybeContext<BuildRESTFunction<typeof publicReportItemsBackInStock> & typeof publicReportItemsBackInStock>;
export { publicOnBackInStockNotificationRequestCreated };
export type _publicOnBackInStockNotificationRequestCreatedType = typeof publicOnBackInStockNotificationRequestCreated;
/**
 * Triggered when a back in stock notification request is created.
 */
export declare const onBackInStockNotificationRequestCreated: ReturnType<typeof createEventModule<_publicOnBackInStockNotificationRequestCreatedType>>;
export { publicOnBackInStockNotificationRequestDeleted };
export type _publicOnBackInStockNotificationRequestDeletedType = typeof publicOnBackInStockNotificationRequestDeleted;
/**
 * Triggered when a back in stock notification request is deleted.
 */
export declare const onBackInStockNotificationRequestDeleted: ReturnType<typeof createEventModule<_publicOnBackInStockNotificationRequestDeletedType>>;
export { publicOnBackInStockNotificationRequestUpdated };
export type _publicOnBackInStockNotificationRequestUpdatedType = typeof publicOnBackInStockNotificationRequestUpdated;
/**
 * Triggered when a back in stock notification request is updated.
 */
export declare const onBackInStockNotificationRequestUpdated: ReturnType<typeof createEventModule<_publicOnBackInStockNotificationRequestUpdatedType>>;
export { Status, SortOrder, WebhookIdentityType, } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.universal';
export { BackInStockNotificationRequest, CatalogReference, InvalidateCache, InvalidateCacheGetByOneOf, App, Page, URI, File, CreateBackInStockNotificationRequestRequest, BackInStockItemDetails, CreateBackInStockNotificationRequestResponse, GetBackInStockNotificationRequestRequest, GetBackInStockNotificationRequestResponse, DeleteBackInStockNotificationRequestRequest, DeleteBackInStockNotificationRequestResponse, MarkAsNotificationSentRequest, MarkAsNotificationSentResponse, QueryBackInStockNotificationRequestsRequest, PlatformQuery, PlatformQueryPagingMethodOneOf, Sorting, PlatformPaging, CursorPaging, QueryBackInStockNotificationRequestsResponse, PlatformPagingMetadata, Cursors, GetBackInStockNotificationRequestsCountByCatalogReferencesRequest, GetBackInStockNotificationRequestsCountByCatalogReferencesResponse, BackInStockNotificationRequestsCount, ReportItemsBackInStockRequest, ReportItemsBackInStockResponse, DomainEvent, DomainEventBodyOneOf, EntityCreatedEvent, RestoreInfo, EntityUpdatedEvent, EntityDeletedEvent, ActionEvent, Empty, MessageEnvelope, IdentificationData, IdentificationDataIdOneOf, BackInStockNotificationRequestNonNullableFields, CreateBackInStockNotificationRequestResponseNonNullableFields, GetBackInStockNotificationRequestResponseNonNullableFields, MarkAsNotificationSentResponseNonNullableFields, QueryBackInStockNotificationRequestsResponseNonNullableFields, GetBackInStockNotificationRequestsCountByCatalogReferencesResponseNonNullableFields, BaseEventMetadata, EventMetadata, BackInStockNotificationRequestCreatedEnvelope, BackInStockNotificationRequestDeletedEnvelope, BackInStockNotificationRequestUpdatedEnvelope, RequestsQueryResult, RequestsQueryBuilder, ReportItemsBackInStockOptions, } from './ecom-v1-back-in-stock-notification-request-back-in-stock-notifications.universal';
