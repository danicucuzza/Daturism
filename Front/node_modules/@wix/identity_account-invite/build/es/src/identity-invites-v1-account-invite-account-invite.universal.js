import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
import * as ambassadorWixIdentityInvitesV1AccountInvite from './identity-invites-v1-account-invite-account-invite.http';
/** Invite status stating whether the invite was accepted, waiting to be accepted, deleted etc.. */
export var InviteStatus;
(function (InviteStatus) {
    InviteStatus["Pending"] = "Pending";
    InviteStatus["Used"] = "Used";
    InviteStatus["Deleted"] = "Deleted";
    InviteStatus["Declined"] = "Declined";
    InviteStatus["Expired"] = "Expired";
})(InviteStatus || (InviteStatus = {}));
export var SimpleConditionOperator;
(function (SimpleConditionOperator) {
    SimpleConditionOperator["UNKNOWN_SIMPLE_OP"] = "UNKNOWN_SIMPLE_OP";
    SimpleConditionOperator["EQUAL"] = "EQUAL";
})(SimpleConditionOperator || (SimpleConditionOperator = {}));
export var JoinedConditionOperator;
(function (JoinedConditionOperator) {
    JoinedConditionOperator["UNKNOWN_JOIN_OP"] = "UNKNOWN_JOIN_OP";
    JoinedConditionOperator["OR"] = "OR";
    JoinedConditionOperator["AND"] = "AND";
})(JoinedConditionOperator || (JoinedConditionOperator = {}));
export var SubjectType;
(function (SubjectType) {
    SubjectType["UNKNOWN"] = "UNKNOWN";
    SubjectType["ACCOUNT"] = "ACCOUNT";
    SubjectType["USER"] = "USER";
    SubjectType["USER_GROUP"] = "USER_GROUP";
    SubjectType["MEMBER_GROUP"] = "MEMBER_GROUP";
    SubjectType["VISITOR_GROUP"] = "VISITOR_GROUP";
    SubjectType["EXTERNAL_APP"] = "EXTERNAL_APP";
    SubjectType["ACCOUNT_GROUP"] = "ACCOUNT_GROUP";
    SubjectType["WIX_APP"] = "WIX_APP";
})(SubjectType || (SubjectType = {}));
export var SubjectContextType;
(function (SubjectContextType) {
    SubjectContextType["UNKNOWN_CTX"] = "UNKNOWN_CTX";
    SubjectContextType["ORG_CTX"] = "ORG_CTX";
    SubjectContextType["ACCOUNT_CTX"] = "ACCOUNT_CTX";
})(SubjectContextType || (SubjectContextType = {}));
/**
 * Creates and sends invite emails to a list of potential team members, inviting them to become team members of the requesting account.
 * The invites may be limited to a specific resource (site or other asset).
 * Maximum 50 invitees can be specified per call.
 *
 * > **Important**: This call requires an account level API key and cannot be authenticated with the standard authorization header. API keys are currently available to selected beta users only.
 * @param subjectsAssignments - Array of potential team members' email addresses and their corresponding assignments (how they will be assigned when they accept the invite).
 * @public
 * @documentationMaturity preview
 * @requiredField subjectsAssignments
 * @permissionId team.send-invite
 */
export async function createInvite(subjectsAssignments, options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[2];
    const payload = renameKeysFromSDKRequestToRESTRequest({
        subjectsAssignments: subjectsAssignments,
        defaultEmailLanguage: options?.defaultEmailLanguage,
    });
    const reqOpts = ambassadorWixIdentityInvitesV1AccountInvite.createInvite(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {
                subjectsAssignments: '$[0]',
                defaultEmailLanguage: '$[1].defaultEmailLanguage',
            },
            singleArgumentUnchanged: false,
        }, ['subjectsAssignments', 'options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
//# sourceMappingURL=identity-invites-v1-account-invite-account-invite.universal.js.map