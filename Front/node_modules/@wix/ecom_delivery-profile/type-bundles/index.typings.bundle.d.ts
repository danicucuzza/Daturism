/**
 * A DeliveryProfile is a ...
 * You can ...
 * Read more about DeliveryProfiles
 * in this [article](<LINK_TO_KB_ARTICLE>).
 */
interface DeliveryProfile {
    /**
     * DeliveryProfile ID.
     * @readonly
     */
    _id?: string | null;
    /** DeliveryProfile name. */
    name?: string | null;
    /**
     * Indicates that this DeliveryProfile is the default DeliveryProfile.
     * @readonly
     */
    default?: boolean | null;
    /** A list of DeliveryProfile regions. */
    deliveryRegions?: DeliveryRegion[];
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
    /**
     * Date and time the DeliveryProfile was created.
     * @readonly
     */
    _createdDate?: Date | null;
    /**
     * Date and time the DeliveryProfile was last updated.
     * @readonly
     */
    _updatedDate?: Date | null;
    /** Extended fields. */
    extendedFields?: ExtendedFields;
}
/** DeliveryRegion can be used to config a Delivery Destinations with its providers */
interface DeliveryRegion {
    /**
     * The delivery region id.
     * @readonly
     */
    _id?: string | null;
    /** Optional name of the rule, for example: "Domestic". */
    name?: string | null;
    /** Indicates that this rule is active, default value is true. */
    active?: boolean | null;
    /**
     * The spi implementers id of shipping-rates spi, assigned to this rule.
     * @readonly
     */
    deliveryCarriers?: DeliveryCarrier[];
    /** The operation region of this rule, if empty than it is global. */
    destinations?: Destination[];
    /**
     * Represents the time this Profile was created
     * @readonly
     */
    _createdDate?: Date | null;
}
interface DeliveryCarrier {
    /** AppDefId of the provider as it is registered in the [app dashboard](https://dev.wix.com/dc3/my-apps/). Can be fetched by listDeliveryProvider api. */
    appId?: string;
    /** Backup rate to be used in case the cost returned by the provider is empty. */
    backupRate?: BackupRate;
    /** Additional charges to add to the delivery rate for this carrier */
    additionalCharges?: AdditionalCharge[];
}
interface BackupRate {
    /** Default rate prefix that will concatenate to the delivery options the provider will offer. */
    prefix?: string | null;
    /** Default rate price for all delivery options that the provider will offer. */
    rate?: string | null;
    /** Should the default rate be used. Default value is false. */
    enabled?: boolean | null;
}
interface AdditionalCharge {
    /** Additional charge type. */
    type?: ChargeType;
    /** Description of the additional charge. For example, `"Handling fee of $5 applied for gift wrapping"`. */
    description?: string | null;
    /** Cost of additional charge. For example, `12.5`. */
    price?: string;
}
declare enum ChargeType {
    HANDLING_FEE = "HANDLING_FEE"
}
/** Defines the area inside one country that is relevant for this rule. */
interface Destination {
    /** 2-letters code represents the country of the delivery destinations */
    countryCode?: string;
    /**
     * subdivisions - Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).
     * If empty, the rule applies to the entire country.
     */
    subdivisions?: string[];
}
interface ExtendedFields {
    /**
     * Extended field data. Each key corresponds to the namespace of the app that created the extended fields.
     * The value of each key is structured according to the schema defined when the extended fields were configured.
     *
     * You can only access fields for which you have the appropriate permissions.
     *
     * Learn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).
     */
    namespaces?: Record<string, Record<string, any>>;
}
interface CreateDeliveryProfileRequest {
    /** DeliveryProfile to be created. */
    deliveryProfile: DeliveryProfile;
}
interface CreateDeliveryProfileResponse {
    /** The created DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface DeliveryRegionAdded {
    /** The DeliveryProfile owns this region. */
    deliveryProfileId?: string;
    /**
     * The delivery region id.
     * @readonly
     */
    deliveryRegionId?: string | null;
    /** Optional name of the rule, for example: "Domestic". */
    name?: string | null;
    /** Indicates that this rule is active, default value is true. */
    active?: boolean | null;
    /**
     * The spi implementers id of shipping-rates spi, assigned to this rule.
     * @readonly
     */
    deliveryCarriers?: DeliveryCarrier[];
    /** The operation region of this rule, if empty than it is global. */
    destinations?: Destination[];
    /**
     * Represents the time this Profile was created
     * @readonly
     */
    _createdDate?: Date | null;
}
interface GetDeliveryProfileRequest {
    /** ID of the DeliveryProfile to retrieve. */
    deliveryProfileId: string;
}
interface GetDeliveryProfileResponse {
    /** The requested DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface UpdateDeliveryProfileRequest {
    /** DeliveryProfile to be updated, may be partial. */
    deliveryProfile: DeliveryProfile;
}
interface UpdateDeliveryProfileResponse {
    /** Updated DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface DeleteDeliveryProfileRequest {
    /** Id of the DeliveryProfile to delete. */
    deliveryProfileId: string;
}
interface DeleteDeliveryProfileResponse {
}
interface DeliveryRegionRemoved {
    /** The DeliveryProfile owns this region. */
    deliveryProfileId?: string;
    /** The removed DeliveryRegion id. */
    deliveryRegionId?: string;
}
interface QueryDeliveryProfilesRequest {
    /** WQL expression. */
    query?: CursorQuery;
}
interface CursorQuery extends CursorQueryPagingMethodOneOf {
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
    /**
     * Filter object in the following format:
     * `"filter" : {
     * "fieldName1": "value1",
     * "fieldName2":{"$operator":"value2"}
     * }`
     * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`
     */
    filter?: Record<string, any> | null;
    /**
     * Sort object in the following format:
     * `[{"fieldName":"sortField1","order":"ASC"},{"fieldName":"sortField2","order":"DESC"}]`
     */
    sort?: Sorting[];
}
/** @oneof */
interface CursorQueryPagingMethodOneOf {
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
}
interface Sorting {
    /** Name of the field to sort by. */
    fieldName?: string;
    /** Sort order. */
    order?: SortOrder;
}
declare enum SortOrder {
    ASC = "ASC",
    DESC = "DESC"
}
interface CursorPaging {
    /** Maximum number of items to return in the results. */
    limit?: number | null;
    /**
     * Pointer to the next or previous page in the list of results.
     *
     * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.
     * Not relevant for the first request.
     */
    cursor?: string | null;
}
interface QueryDeliveryProfilesResponse {
    /** List of DeliveryProfiles. */
    deliveryProfiles?: DeliveryProfile[];
    /** Paging metadata */
    pagingMetadata?: CursorPagingMetadata;
}
interface CursorPagingMetadata {
    /** Number of items returned in the response. */
    count?: number | null;
    /** Cursor strings that point to the next page, previous page, or both. */
    cursors?: Cursors;
    /**
     * Whether there are more pages to retrieve following the current page.
     *
     * + `true`: Another page of results can be retrieved.
     * + `false`: This is the last page.
     */
    hasNext?: boolean | null;
}
interface Cursors {
    /** Cursor string pointing to the next page in the list of results. */
    next?: string | null;
    /** Cursor pointing to the previous page in the list of results. */
    prev?: string | null;
}
interface AddDeliveryRegionRequest {
    /** delivery profile id to associated with the DeliveryRegion */
    deliveryProfileId: string;
    /** DeliveryRegion to be created */
    deliveryRegion: DeliveryRegion;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface AddDeliveryRegionResponse {
    /** The updated DeliveryProfile with the new DeliveryRegion */
    deliveryProfile?: DeliveryProfile;
}
interface UpdateDeliveryRegionRequest {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /** DeliveryRegion to be updated, may be partial */
    deliveryRegion: DeliveryRegion;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface UpdateDeliveryRegionResponse {
    /** The updated DeliveryProfile with the updated DeliveryRegion */
    deliveryProfile?: DeliveryProfile;
}
interface DeliveryRegionUpdated {
    /** The DeliveryProfile owns this DeliveryRegion. */
    deliveryProfileId?: string;
    /**
     * The delivery region id.
     * @readonly
     */
    deliveryRegionId?: string | null;
    /** Optional name of the rule, for example: "Domestic". */
    name?: string | null;
    /** Indicates that this rule is active, default value is true. */
    active?: boolean | null;
    /**
     * The spi implementers id of shipping-rates spi, assigned to this rule.
     * @readonly
     */
    deliveryCarriers?: DeliveryCarrier[];
    /** The operation region of this rule, if empty than it is global. */
    destinations?: Destination[];
    /**
     * Represents the time this Profile was created
     * @readonly
     */
    _createdDate?: Date | null;
}
interface RemoveDeliveryRegionRequest {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /** Id of the DeliveryRegion to delete */
    deliveryRegionId: string;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface RemoveDeliveryRegionResponse {
    /** The updated DeliveryProfile without DeliveryRegion */
    deliveryProfile?: DeliveryProfile;
}
interface AddDeliveryCarrierRequest {
    /** delivery_region id to associated with the delivery_carrier. */
    deliveryRegionId: string;
    /** delivery_carrier to be added. */
    deliveryCarrier: DeliveryCarrier;
}
interface AddDeliveryCarrierResponse {
    /** The updated DeliveryProfile */
    deliveryProfile?: DeliveryProfile;
}
interface RemoveDeliveryCarrierRequest {
    /** Id of the DeliveryRegion */
    deliveryRegionId: string;
    /** DeliveryCarrier app id to be removed. */
    appId: string;
}
interface RemoveDeliveryCarrierResponse {
    /** The updated DeliveryProfile */
    deliveryProfile?: DeliveryProfile;
}
interface UpdateDeliveryCarrierRequest {
    /** DeliveryRegion id */
    deliveryRegionId: string;
    /** Updated delivery_carrier */
    deliveryCarrier?: DeliveryCarrier;
}
interface UpdateDeliveryCarrierResponse {
    /** The updated DeliveryProfile with the updated DeliveryCarrier */
    deliveryProfile?: DeliveryProfile;
}
interface ListDeliveryCarrierDetailsRequest {
}
interface ListDeliveryCarrierDetailsResponse {
    /** The list of carrier or multi-carrier services that has implemented the spi and installed on the current context(site) */
    deliveryCarrierDetails?: DeliveryCarrierDetails[];
}
interface DeliveryCarrierDetails {
    /** The id of the provider. */
    _id?: string;
    /** The name of the Provider. */
    displayName?: string;
    /** Provider's description. */
    description?: string | null;
    /** A link to learn more about the provider. */
    learnMoreUrl?: string | null;
    /** Dashboard URL for the provider. */
    dashboardUrl?: string | null;
    /** If the provider fallback definition is mandatory. */
    fallbackDefinitionMandatory?: boolean | null;
    /** Thumbnail image for provider. */
    thumbnailUrl?: string | null;
    /** feature toggle initialized with default value = false. should be true if implemented by spi provider */
    toggleGetCarrierSettingsEnabled?: boolean;
}
interface ListDeliveryCarriersRequest {
    /** Delivery profile id. */
    deliveryProfileId: string;
    /** Delivery app ids to get settings for. */
    appIds?: string[];
}
interface ListDeliveryCarriersResponse {
    /** The list of delivery settings for the given requests */
    results?: ListDeliveryCarriersResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
interface ListDeliveryCarriersResult {
    /** Information about successful action or error for failure. */
    deliveryCarrierMetadata?: ItemMetadata;
    /** The delivery carrier details */
    deliveryCarrierDetails?: DeliveryCarrierDetails;
    /** The delivery settings for the delivery profile and delivery region. */
    deliveryCarrierRegionalSettings?: DeliveryCarrierRegionalSettings[];
}
interface ItemMetadata {
    /** Item ID. Should always be available, unless it's impossible (for example, when failing to create an item). */
    _id?: string | null;
    /** Whether the requested action was successful for this item. When `false`, the `error` field is populated. */
    success?: boolean;
    /** Details about the error in case of failure. */
    error?: ApplicationError;
}
interface ApplicationError {
    /** Error code. */
    code?: string;
    /** Description of the error. */
    description?: string;
    /** Data related to the error. */
    data?: Record<string, any> | null;
}
interface DeliveryCarrierRegionalSettings {
    /** The delivery rule id. */
    deliveryRegionId?: string;
    /** The shipping table values that are associated with the delivery rule. Can be multiple if the provider is an aggregator of multiple carriers. */
    dashboardTables?: DashboardTable[];
}
interface DashboardTable {
    /** The title of the delivery settings that will be displayed in the UI. */
    title?: string;
    /** The columns of the delivery settings that will be displayed in the UI. */
    columns?: Column[];
    /** The content of the delivery settings. Each row is a map of column name to value. */
    rows?: Row[];
}
interface Column {
    /** The name of the column. This is used to get the data from the row. */
    key?: string;
    /** The title of the column that will be displayed in the UI. */
    name?: string;
}
interface Row {
    /** The external key of the data presented in a row. This is used to identify the row in the UI for editing. */
    key?: string;
    /**
     * The data presented in the row. The key is the column `name` and the value is the data in the specific row and column.
     * Data will be in JSON format.
     */
    data?: Record<string, any> | null;
}
interface BulkActionMetadata {
    /** Number of items that were successfully processed. */
    totalSuccesses?: number;
    /** Number of items that couldn't be processed. */
    totalFailures?: number;
    /** Number of failures without details because detailed failure threshold was exceeded. */
    undetailedFailures?: number;
}
interface UpdateExtendedFieldsRequest {
    /** ID of the entity to update. */
    _id: string;
    /** Identifier for the app whose extended fields are being updated. */
    namespace: string;
    /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */
    namespaceData: Record<string, any> | null;
}
interface UpdateExtendedFieldsResponse {
    /** Updated DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface MetaSiteSpecialEvent extends MetaSiteSpecialEventPayloadOneOf {
    /** Emitted on a meta site creation. */
    siteCreated?: SiteCreated;
    /** Emitted on a meta site transfer completion. */
    siteTransferred?: SiteTransferred;
    /** Emitted on a meta site deletion. */
    siteDeleted?: SiteDeleted;
    /** Emitted on a meta site restoration. */
    siteUndeleted?: SiteUndeleted;
    /** Emitted on the first* publish of the meta site (* switching from unpublished to published state). */
    sitePublished?: SitePublished;
    /** Emitted on a meta site unpublish. */
    siteUnpublished?: SiteUnpublished;
    /** Emitted when meta site is marked as template. */
    siteMarkedAsTemplate?: SiteMarkedAsTemplate;
    /** Emitted when meta site is marked as a WixSite. */
    siteMarkedAsWixSite?: SiteMarkedAsWixSite;
    /** Emitted when an application is provisioned (installed). */
    serviceProvisioned?: ServiceProvisioned;
    /** Emitted when an application is removed (uninstalled). */
    serviceRemoved?: ServiceRemoved;
    /** Emitted when meta site name (URL slug) is changed. */
    siteRenamedPayload?: SiteRenamed;
    /** Emitted when meta site was permanently deleted. */
    hardDeleted?: SiteHardDeleted;
    /** Emitted on a namespace change. */
    namespaceChanged?: NamespaceChanged;
    /** Emitted when Studio is attached. */
    studioAssigned?: StudioAssigned;
    /** Emitted when Studio is detached. */
    studioUnassigned?: StudioUnassigned;
    /** A meta site id. */
    metaSiteId?: string;
    /** A meta site version. Monotonically increasing. */
    version?: string;
    /** A timestamp of the event. */
    timestamp?: string;
    /**
     * TODO(meta-site): Change validation once validations are disabled for consumers
     * More context: https://wix.slack.com/archives/C0UHEBPFT/p1720957844413149 and https://wix.slack.com/archives/CFWKX325T/p1728892152855659
     */
    assets?: Asset[];
}
/** @oneof */
interface MetaSiteSpecialEventPayloadOneOf {
    /** Emitted on a meta site creation. */
    siteCreated?: SiteCreated;
    /** Emitted on a meta site transfer completion. */
    siteTransferred?: SiteTransferred;
    /** Emitted on a meta site deletion. */
    siteDeleted?: SiteDeleted;
    /** Emitted on a meta site restoration. */
    siteUndeleted?: SiteUndeleted;
    /** Emitted on the first* publish of the meta site (* switching from unpublished to published state). */
    sitePublished?: SitePublished;
    /** Emitted on a meta site unpublish. */
    siteUnpublished?: SiteUnpublished;
    /** Emitted when meta site is marked as template. */
    siteMarkedAsTemplate?: SiteMarkedAsTemplate;
    /** Emitted when meta site is marked as a WixSite. */
    siteMarkedAsWixSite?: SiteMarkedAsWixSite;
    /** Emitted when an application is provisioned (installed). */
    serviceProvisioned?: ServiceProvisioned;
    /** Emitted when an application is removed (uninstalled). */
    serviceRemoved?: ServiceRemoved;
    /** Emitted when meta site name (URL slug) is changed. */
    siteRenamedPayload?: SiteRenamed;
    /** Emitted when meta site was permanently deleted. */
    hardDeleted?: SiteHardDeleted;
    /** Emitted on a namespace change. */
    namespaceChanged?: NamespaceChanged;
    /** Emitted when Studio is attached. */
    studioAssigned?: StudioAssigned;
    /** Emitted when Studio is detached. */
    studioUnassigned?: StudioUnassigned;
}
interface Asset {
    /** An application definition id (app_id in dev-center). For legacy reasons may be UUID or a string (from Java Enum). */
    appDefId?: string;
    /** An instance id. For legacy reasons may be UUID or a string. */
    instanceId?: string;
    /** An application state. */
    state?: State;
}
declare enum State {
    UNKNOWN = "UNKNOWN",
    ENABLED = "ENABLED",
    DISABLED = "DISABLED",
    PENDING = "PENDING",
    DEMO = "DEMO"
}
interface SiteCreated {
    /** A template identifier (empty if not created from a template). */
    originTemplateId?: string;
    /** An account id of the owner. */
    ownerId?: string;
    /** A context in which meta site was created. */
    context?: SiteCreatedContext;
    /**
     * A meta site id from which this site was created.
     *
     * In case of a creation from a template it's a template id.
     * In case of a site duplication ("Save As" in dashboard or duplicate in UM) it's an id of a source site.
     */
    originMetaSiteId?: string | null;
    /** A meta site name (URL slug). */
    siteName?: string;
    /** A namespace. */
    namespace?: Namespace;
}
declare enum SiteCreatedContext {
    /** A valid option, we don't expose all reasons why site might be created. */
    OTHER = "OTHER",
    /** A meta site was created from template. */
    FROM_TEMPLATE = "FROM_TEMPLATE",
    /** A meta site was created by copying of the transfferred meta site. */
    DUPLICATE_BY_SITE_TRANSFER = "DUPLICATE_BY_SITE_TRANSFER",
    /** A copy of existing meta site. */
    DUPLICATE = "DUPLICATE",
    /** A meta site was created as a transfferred site (copy of the original), old flow, should die soon. */
    OLD_SITE_TRANSFER = "OLD_SITE_TRANSFER",
    /** deprecated A meta site was created for Flash editor. */
    FLASH = "FLASH"
}
declare enum Namespace {
    UNKNOWN_NAMESPACE = "UNKNOWN_NAMESPACE",
    /** Default namespace for UGC sites. MetaSites with this namespace will be shown in a user's site list by default. */
    WIX = "WIX",
    /** ShoutOut stand alone product. These are siteless (no actual Wix site, no HtmlWeb). MetaSites with this namespace will *not* be shown in a user's site list by default. */
    SHOUT_OUT = "SHOUT_OUT",
    /** MetaSites created by the Albums product, they appear as part of the Albums app. MetaSites with this namespace will *not* be shown in a user's site list by default. */
    ALBUMS = "ALBUMS",
    /** Part of the WixStores migration flow, a user tries to migrate and gets this site to view and if the user likes it then stores removes this namespace and deletes the old site with the old stores. MetaSites with this namespace will *not* be shown in a user's site list by default. */
    WIX_STORES_TEST_DRIVE = "WIX_STORES_TEST_DRIVE",
    /** Hotels standalone (siteless). MetaSites with this namespace will *not* be shown in a user's site list by default. */
    HOTELS = "HOTELS",
    /** Clubs siteless MetaSites, a club without a wix website. MetaSites with this namespace will *not* be shown in a user's site list by default. */
    CLUBS = "CLUBS",
    /** A partially created ADI website. MetaSites with this namespace will *not* be shown in a user's site list by default. */
    ONBOARDING_DRAFT = "ONBOARDING_DRAFT",
    /** AppBuilder for AppStudio / shmite (c). MetaSites with this namespace will *not* be shown in a user's site list by default. */
    DEV_SITE = "DEV_SITE",
    /** LogoMaker websites offered to the user after logo purchase. MetaSites with this namespace will *not* be shown in a user's site list by default. */
    LOGOS = "LOGOS",
    /** VideoMaker websites offered to the user after video purchase. MetaSites with this namespace will *not* be shown in a user's site list by default. */
    VIDEO_MAKER = "VIDEO_MAKER",
    /** MetaSites with this namespace will *not* be shown in a user's site list by default. */
    PARTNER_DASHBOARD = "PARTNER_DASHBOARD",
    /** MetaSites with this namespace will *not* be shown in a user's site list by default. */
    DEV_CENTER_COMPANY = "DEV_CENTER_COMPANY",
    /**
     * A draft created by HTML editor on open. Upon "first save" it will be moved to be of WIX domain.
     *
     * Meta site with this namespace will *not* be shown in a user's site list by default.
     */
    HTML_DRAFT = "HTML_DRAFT",
    /**
     * the user-journey for Fitness users who want to start from managing their business instead of designing their website.
     * Will be accessible from Site List and will not have a website app.
     * Once the user attaches a site, the site will become a regular wixsite.
     */
    SITELESS_BUSINESS = "SITELESS_BUSINESS",
    /** Belongs to "strategic products" company. Supports new product in the creator's economy space. */
    CREATOR_ECONOMY = "CREATOR_ECONOMY",
    /** It is to be used in the Business First efforts. */
    DASHBOARD_FIRST = "DASHBOARD_FIRST",
    /** Bookings business flow with no site. */
    ANYWHERE = "ANYWHERE",
    /** Namespace for Headless Backoffice with no editor */
    HEADLESS = "HEADLESS",
    /**
     * Namespace for master site that will exist in parent account that will be referenced by subaccounts
     * The site will be used for account level CSM feature for enterprise
     */
    ACCOUNT_MASTER_CMS = "ACCOUNT_MASTER_CMS",
    /** Rise.ai Siteless account management for Gift Cards and Store Credit. */
    RISE = "RISE",
    /**
     * As part of the branded app new funnel, users now can create a meta site that will be branded app first.
     * There's a blank site behind the scene but it's blank).
     * The Mobile company will be the owner of this namespace.
     */
    BRANDED_FIRST = "BRANDED_FIRST",
    /** Nownia.com Siteless account management for Ai Scheduling Assistant. */
    NOWNIA = "NOWNIA",
    /**
     * UGC Templates are templates that are created by users for personal use and to sale to other users.
     * The Partners company owns this namespace.
     */
    UGC_TEMPLATE = "UGC_TEMPLATE",
    /** Codux Headless Sites */
    CODUX = "CODUX"
}
/** Site transferred to another user. */
interface SiteTransferred {
    /** A previous owner id (user that transfers meta site). */
    oldOwnerId?: string;
    /** A new owner id (user that accepts meta site). */
    newOwnerId?: string;
}
/** Soft deletion of the meta site. Could be restored. */
interface SiteDeleted {
    /** A deletion context. */
    deleteContext?: DeleteContext;
}
interface DeleteContext {
    /** When the meta site was deleted. */
    dateDeleted?: Date | null;
    /** A status. */
    deleteStatus?: DeleteStatus;
    /** A reason (flow). */
    deleteOrigin?: string;
    /** A service that deleted it. */
    initiatorId?: string | null;
}
declare enum DeleteStatus {
    UNKNOWN = "UNKNOWN",
    TRASH = "TRASH",
    DELETED = "DELETED",
    PENDING_PURGE = "PENDING_PURGE"
}
/** Restoration of the meta site. */
interface SiteUndeleted {
}
/** First publish of a meta site. Or subsequent publish after unpublish. */
interface SitePublished {
}
interface SiteUnpublished {
    /** A list of URLs previously associated with the meta site. */
    urls?: string[];
}
interface SiteMarkedAsTemplate {
}
interface SiteMarkedAsWixSite {
}
interface ServiceProvisioned {
    /** Either UUID or EmbeddedServiceType. */
    appDefId?: string;
    /** Not only UUID. Something here could be something weird. */
    instanceId?: string;
    /** An instance id from which this instance is originated. */
    originInstanceId?: string;
    /** A version. */
    version?: string | null;
    /** The origin meta site id */
    originMetaSiteId?: string | null;
}
interface ServiceRemoved {
    /** Either UUID or EmbeddedServiceType. */
    appDefId?: string;
    /** Not only UUID. Something here could be something weird. */
    instanceId?: string;
    /** A version. */
    version?: string | null;
}
/** Rename of the site. Meaning, free public url has been changed as well. */
interface SiteRenamed {
    /** A new meta site name (URL slug). */
    newSiteName?: string;
    /** A previous meta site name (URL slug). */
    oldSiteName?: string;
}
/**
 * Hard deletion of the meta site.
 *
 * Could not be restored. Therefore it's desirable to cleanup data.
 */
interface SiteHardDeleted {
    /** A deletion context. */
    deleteContext?: DeleteContext;
}
interface NamespaceChanged {
    /** A previous namespace. */
    oldNamespace?: Namespace;
    /** A new namespace. */
    newNamespace?: Namespace;
}
/** Assigned Studio editor */
interface StudioAssigned {
}
/** Unassigned Studio editor */
interface StudioUnassigned {
}
interface Empty {
}
interface DomainEvent extends DomainEventBodyOneOf {
    createdEvent?: EntityCreatedEvent;
    updatedEvent?: EntityUpdatedEvent;
    deletedEvent?: EntityDeletedEvent;
    actionEvent?: ActionEvent;
    /**
     * Unique event ID.
     * Allows clients to ignore duplicate webhooks.
     */
    _id?: string;
    /**
     * Assumes actions are also always typed to an entity_type
     * Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction
     */
    entityFqdn?: string;
    /**
     * This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)
     * This is although the created/updated/deleted notion is duplication of the oneof types
     * Example: created/updated/deleted/started/completed/email_opened
     */
    slug?: string;
    /** ID of the entity associated with the event. */
    entityId?: string;
    /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example: 2020-04-26T13:57:50.699Z */
    eventTime?: Date | null;
    /**
     * Whether the event was triggered as a result of a privacy regulation application
     * (for example, GDPR).
     */
    triggeredByAnonymizeRequest?: boolean | null;
    /** If present, indicates the action that triggered the event. */
    originatedFrom?: string | null;
    /**
     * A sequence number defining the order of updates to the underlying entity.
     * For example, given that some entity was updated at 16:00 and than again at 16:01,
     * it is guaranteed that the sequence number of the second update is strictly higher than the first.
     * As the consumer, you can use this value to ensure that you handle messages in the correct order.
     * To do so, you will need to persist this number on your end, and compare the sequence number from the
     * message against the one you have stored. Given that the stored number is higher, you should ignore the message.
     */
    entityEventSequence?: string | null;
}
/** @oneof */
interface DomainEventBodyOneOf {
    createdEvent?: EntityCreatedEvent;
    updatedEvent?: EntityUpdatedEvent;
    deletedEvent?: EntityDeletedEvent;
    actionEvent?: ActionEvent;
}
interface EntityCreatedEvent {
    entity?: string;
}
interface RestoreInfo {
    deletedDate?: Date | null;
}
interface EntityUpdatedEvent {
    /**
     * Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.
     * This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.
     * We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.
     */
    currentEntity?: string;
}
interface EntityDeletedEvent {
    /** Entity that was deleted */
    deletedEntity?: string | null;
}
interface ActionEvent {
    body?: string;
}
interface MessageEnvelope {
    /** App instance ID. */
    instanceId?: string | null;
    /** Event type. */
    eventType?: string;
    /** The identification type and identity data. */
    identity?: IdentificationData;
    /** Stringify payload. */
    data?: string;
}
interface IdentificationData extends IdentificationDataIdOneOf {
    /** ID of a site visitor that has not logged in to the site. */
    anonymousVisitorId?: string;
    /** ID of a site visitor that has logged in to the site. */
    memberId?: string;
    /** ID of a Wix user (site owner, contributor, etc.). */
    wixUserId?: string;
    /** ID of an app. */
    appId?: string;
    /** @readonly */
    identityType?: WebhookIdentityType;
}
/** @oneof */
interface IdentificationDataIdOneOf {
    /** ID of a site visitor that has not logged in to the site. */
    anonymousVisitorId?: string;
    /** ID of a site visitor that has logged in to the site. */
    memberId?: string;
    /** ID of a Wix user (site owner, contributor, etc.). */
    wixUserId?: string;
    /** ID of an app. */
    appId?: string;
}
declare enum WebhookIdentityType {
    UNKNOWN = "UNKNOWN",
    ANONYMOUS_VISITOR = "ANONYMOUS_VISITOR",
    MEMBER = "MEMBER",
    WIX_USER = "WIX_USER",
    APP = "APP"
}
interface AdditionalChargeNonNullableFields {
    type: ChargeType;
    price: string;
}
interface DeliveryCarrierNonNullableFields {
    appId: string;
    additionalCharges: AdditionalChargeNonNullableFields[];
}
interface DestinationNonNullableFields {
    countryCode: string;
    subdivisions: string[];
}
interface DeliveryRegionNonNullableFields {
    deliveryCarriers: DeliveryCarrierNonNullableFields[];
    destinations: DestinationNonNullableFields[];
}
interface DeliveryProfileNonNullableFields {
    deliveryRegions: DeliveryRegionNonNullableFields[];
}
interface CreateDeliveryProfileResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface GetDeliveryProfileResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface UpdateDeliveryProfileResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface QueryDeliveryProfilesResponseNonNullableFields {
    deliveryProfiles: DeliveryProfileNonNullableFields[];
}
interface AddDeliveryRegionResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface UpdateDeliveryRegionResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface RemoveDeliveryRegionResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface AddDeliveryCarrierResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface RemoveDeliveryCarrierResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface UpdateDeliveryCarrierResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface DeliveryCarrierDetailsNonNullableFields {
    _id: string;
    displayName: string;
    toggleGetCarrierSettingsEnabled: boolean;
}
interface ListDeliveryCarrierDetailsResponseNonNullableFields {
    deliveryCarrierDetails: DeliveryCarrierDetailsNonNullableFields[];
}
interface ApplicationErrorNonNullableFields {
    code: string;
    description: string;
}
interface ItemMetadataNonNullableFields {
    success: boolean;
    error?: ApplicationErrorNonNullableFields;
}
interface ColumnNonNullableFields {
    key: string;
    name: string;
}
interface RowNonNullableFields {
    key: string;
}
interface DashboardTableNonNullableFields {
    title: string;
    columns: ColumnNonNullableFields[];
    rows: RowNonNullableFields[];
}
interface DeliveryCarrierRegionalSettingsNonNullableFields {
    deliveryRegionId: string;
    dashboardTables: DashboardTableNonNullableFields[];
}
interface ListDeliveryCarriersResultNonNullableFields {
    deliveryCarrierMetadata?: ItemMetadataNonNullableFields;
    deliveryCarrierDetails?: DeliveryCarrierDetailsNonNullableFields;
    deliveryCarrierRegionalSettings: DeliveryCarrierRegionalSettingsNonNullableFields[];
}
interface BulkActionMetadataNonNullableFields {
    totalSuccesses: number;
    totalFailures: number;
    undetailedFailures: number;
}
interface ListDeliveryCarriersResponseNonNullableFields {
    results: ListDeliveryCarriersResultNonNullableFields[];
    bulkActionMetadata?: BulkActionMetadataNonNullableFields;
}
interface UpdateExtendedFieldsResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface BaseEventMetadata {
    /** App instance ID. */
    instanceId?: string | null;
    /** Event type. */
    eventType?: string;
    /** The identification type and identity data. */
    identity?: IdentificationData;
}
interface EventMetadata extends BaseEventMetadata {
    /**
     * Unique event ID.
     * Allows clients to ignore duplicate webhooks.
     */
    _id?: string;
    /**
     * Assumes actions are also always typed to an entity_type
     * Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction
     */
    entityFqdn?: string;
    /**
     * This is top level to ease client code dispatching of messages (switch on entity_fqdn+slug)
     * This is although the created/updated/deleted notion is duplication of the oneof types
     * Example: created/updated/deleted/started/completed/email_opened
     */
    slug?: string;
    /** ID of the entity associated with the event. */
    entityId?: string;
    /** Event timestamp in [ISO-8601](https://en.wikipedia.org/wiki/ISO_8601) format and UTC time. For example: 2020-04-26T13:57:50.699Z */
    eventTime?: Date | null;
    /**
     * Whether the event was triggered as a result of a privacy regulation application
     * (for example, GDPR).
     */
    triggeredByAnonymizeRequest?: boolean | null;
    /** If present, indicates the action that triggered the event. */
    originatedFrom?: string | null;
    /**
     * A sequence number defining the order of updates to the underlying entity.
     * For example, given that some entity was updated at 16:00 and than again at 16:01,
     * it is guaranteed that the sequence number of the second update is strictly higher than the first.
     * As the consumer, you can use this value to ensure that you handle messages in the correct order.
     * To do so, you will need to persist this number on your end, and compare the sequence number from the
     * message against the one you have stored. Given that the stored number is higher, you should ignore the message.
     */
    entityEventSequence?: string | null;
}
interface DeliveryProfileCreatedEnvelope {
    entity: DeliveryProfile;
    metadata: EventMetadata;
}
/** @webhook
 * @eventType wix.ecom.v1.delivery_profile_created
 * @documentationMaturity preview
 */
declare function onDeliveryProfileCreated(handler: (event: DeliveryProfileCreatedEnvelope) => void | Promise<void>): void;
interface DeliveryProfileDeliveryRegionAddedEnvelope {
    data: DeliveryRegionAdded;
    metadata: EventMetadata;
}
/**
 * Triggered when a delivery_region is added to a delivery_profile.
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @permissionId ECOM.DELIVERY_PROFILE_READ
 * @webhook
 * @eventType wix.ecom.v1.delivery_profile_delivery_region_added
 * @documentationMaturity preview
 */
declare function onDeliveryProfileDeliveryRegionAdded(handler: (event: DeliveryProfileDeliveryRegionAddedEnvelope) => void | Promise<void>): void;
interface DeliveryProfileUpdatedEnvelope {
    entity: DeliveryProfile;
    metadata: EventMetadata;
}
/**
 * Triggered when the delivery_carrier updated successfully
 * @webhook
 * @eventType wix.ecom.v1.delivery_profile_updated
 * @documentationMaturity preview
 */
declare function onDeliveryProfileUpdated(handler: (event: DeliveryProfileUpdatedEnvelope) => void | Promise<void>): void;
interface DeliveryProfileDeletedEnvelope {
    entity: DeliveryProfile;
    metadata: EventMetadata;
}
/** @webhook
 * @eventType wix.ecom.v1.delivery_profile_deleted
 * @documentationMaturity preview
 */
declare function onDeliveryProfileDeleted(handler: (event: DeliveryProfileDeletedEnvelope) => void | Promise<void>): void;
interface DeliveryProfileDeliveryRegionRemovedEnvelope {
    data: DeliveryRegionRemoved;
    metadata: EventMetadata;
}
/**
 * Triggered for each delivery_region assigned to the deleted delivery_profile
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @permissionId ECOM.DELIVERY_PROFILE_READ
 * @webhook
 * @eventType wix.ecom.v1.delivery_profile_delivery_region_removed
 * @documentationMaturity preview
 */
declare function onDeliveryProfileDeliveryRegionRemoved(handler: (event: DeliveryProfileDeliveryRegionRemovedEnvelope) => void | Promise<void>): void;
interface DeliveryProfileDeliveryRegionUpdatedEnvelope {
    data: DeliveryRegionUpdated;
    metadata: EventMetadata;
}
/**
 * Triggered when the delivery_carrier updated successfully
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @permissionId ECOM.DELIVERY_PROFILE_READ
 * @webhook
 * @eventType wix.ecom.v1.delivery_profile_delivery_region_updated
 * @documentationMaturity preview
 */
declare function onDeliveryProfileDeliveryRegionUpdated(handler: (event: DeliveryProfileDeliveryRegionUpdatedEnvelope) => void | Promise<void>): void;
/**
 * Creates a DeliveryProfile.
 *
 * The request body must include the DeliveryProfiles name. DeliveryRegions are optional.
 * @param deliveryProfile - DeliveryProfile to be created.
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryProfile
 * @requiredField deliveryProfile.deliveryRegions.deliveryCarriers.backupRate.rate
 * @requiredField deliveryProfile.deliveryRegions.destinations
 * @requiredField deliveryProfile.deliveryRegions.destinations.countryCode
 * @requiredField deliveryProfile.deliveryRegions.name
 * @requiredField deliveryProfile.name
 * @permissionId ECOM.DELIVERY_PROFILE_CREATE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 * @returns The created DeliveryProfile.
 */
declare function createDeliveryProfile(deliveryProfile: DeliveryProfile): Promise<DeliveryProfile & DeliveryProfileNonNullableFields>;
/**
 * Retrieves a DeliveryProfile.
 * @param deliveryProfileId - ID of the DeliveryProfile to retrieve.
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryProfileId
 * @permissionId ECOM.DELIVERY_PROFILE_READ
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 * @applicableIdentity VISITOR
 * @returns The requested DeliveryProfile.
 */
declare function getDeliveryProfile(deliveryProfileId: string): Promise<DeliveryProfile & DeliveryProfileNonNullableFields>;
/**
 * Updates a DeliveryProfile.
 *
 *
 * Each time the DeliveryProfile is updated,
 * `revision` increments by 1.
 * The current `revision` must be passed when updating the DeliveryProfile.
 * This ensures you're working with the latest DeliveryProfile
 * and prevents unintended overwrites.
 *
 * This method does not allow updating the DeliveryRegions in this DeliveryProfile.
 * Use AddDeliveryRegion, UpdateDeliveryRegion and RemoveDeliveryRegion for these functionalities.
 * @param _id - DeliveryProfile ID.
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @requiredField deliveryProfile
 * @requiredField deliveryProfile.revision
 * @permissionId ECOM.DELIVERY_PROFILE_UPDATE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 * @returns Updated DeliveryProfile.
 */
declare function updateDeliveryProfile(_id: string | null, deliveryProfile: UpdateDeliveryProfile): Promise<DeliveryProfile & DeliveryProfileNonNullableFields>;
interface UpdateDeliveryProfile {
    /**
     * DeliveryProfile ID.
     * @readonly
     */
    _id?: string | null;
    /** DeliveryProfile name. */
    name?: string | null;
    /**
     * Indicates that this DeliveryProfile is the default DeliveryProfile.
     * @readonly
     */
    default?: boolean | null;
    /** A list of DeliveryProfile regions. */
    deliveryRegions?: DeliveryRegion[];
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
    /**
     * Date and time the DeliveryProfile was created.
     * @readonly
     */
    _createdDate?: Date | null;
    /**
     * Date and time the DeliveryProfile was last updated.
     * @readonly
     */
    _updatedDate?: Date | null;
    /** Extended fields. */
    extendedFields?: ExtendedFields;
}
/**
 * Deletes a DeliveryProfile.
 *
 * Deleting a DeliveryProfile permanently removes them from the DeliveryProfile List.
 * @param deliveryProfileId - Id of the DeliveryProfile to delete.
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryProfileId
 * @permissionId ECOM.DELIVERY_PROFILE_DELETE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function deleteDeliveryProfile(deliveryProfileId: string): Promise<void>;
/**
 * Retrieves a list of DeliveryProfiles, given the provided [paging, filtering, and sorting][1].
 *
 * Up to 1,000 DeliveryProfiles can be returned per request.
 *
 * To learn how to query DeliveryProfiles, see [API Query Language][2].
 *
 * [1]: https://dev.wix.com/api/rest/getting-started/sorting-and-paging
 * [2]: https://dev.wix.com/api/rest/getting-started/api-query-language
 * @public
 * @documentationMaturity preview
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @permissionId ECOM.DELIVERY_PROFILE_READ
 * @applicableIdentity APP
 * @applicableIdentity VISITOR
 */
declare function queryDeliveryProfiles(): DeliveryProfilesQueryBuilder;
interface QueryCursorResult {
    cursors: Cursors;
    hasNext: () => boolean;
    hasPrev: () => boolean;
    length: number;
    pageSize: number;
}
interface DeliveryProfilesQueryResult extends QueryCursorResult {
    items: DeliveryProfile[];
    query: DeliveryProfilesQueryBuilder;
    next: () => Promise<DeliveryProfilesQueryResult>;
    prev: () => Promise<DeliveryProfilesQueryResult>;
}
interface DeliveryProfilesQueryBuilder {
    /** @param propertyName - Property whose value is compared with `value`.
     * @param value - Value to compare against.
     * @documentationMaturity preview
     */
    eq: (propertyName: '_id' | 'name' | 'default' | 'deliveryRegions.id' | 'deliveryRegions.active' | 'deliveryRegions.createdDate' | '_createdDate', value: any) => DeliveryProfilesQueryBuilder;
    /** @param propertyName - Property whose value is compared with `value`.
     * @param value - Value to compare against.
     * @documentationMaturity preview
     */
    ne: (propertyName: '_id' | 'name' | 'default' | 'deliveryRegions.id' | 'deliveryRegions.active' | 'deliveryRegions.createdDate' | '_createdDate', value: any) => DeliveryProfilesQueryBuilder;
    /** @param propertyName - Property whose value is compared with `value`.
     * @param value - Value to compare against.
     * @documentationMaturity preview
     */
    ge: (propertyName: 'deliveryRegions.createdDate' | '_createdDate', value: any) => DeliveryProfilesQueryBuilder;
    /** @param propertyName - Property whose value is compared with `value`.
     * @param value - Value to compare against.
     * @documentationMaturity preview
     */
    gt: (propertyName: 'deliveryRegions.createdDate' | '_createdDate', value: any) => DeliveryProfilesQueryBuilder;
    /** @param propertyName - Property whose value is compared with `value`.
     * @param value - Value to compare against.
     * @documentationMaturity preview
     */
    le: (propertyName: 'deliveryRegions.createdDate' | '_createdDate', value: any) => DeliveryProfilesQueryBuilder;
    /** @param propertyName - Property whose value is compared with `value`.
     * @param value - Value to compare against.
     * @documentationMaturity preview
     */
    lt: (propertyName: 'deliveryRegions.createdDate' | '_createdDate', value: any) => DeliveryProfilesQueryBuilder;
    /** @param propertyName - Property whose value is compared with `string`.
     * @param string - String to compare against. Case-insensitive.
     * @documentationMaturity preview
     */
    startsWith: (propertyName: '_id' | 'name' | 'deliveryRegions.id', value: string) => DeliveryProfilesQueryBuilder;
    /** @param propertyName - Property whose value is compared with `values`.
     * @param values - List of values to compare against.
     * @documentationMaturity preview
     */
    hasSome: (propertyName: '_id' | 'name' | 'default' | 'deliveryRegions.id' | 'deliveryRegions.active' | 'deliveryRegions.createdDate' | '_createdDate', value: any[]) => DeliveryProfilesQueryBuilder;
    /** @documentationMaturity preview */
    in: (propertyName: '_id' | 'name' | 'default' | 'deliveryRegions.id' | 'deliveryRegions.active' | 'deliveryRegions.createdDate' | '_createdDate', value: any) => DeliveryProfilesQueryBuilder;
    /** @documentationMaturity preview */
    exists: (propertyName: '_id' | 'name' | 'default' | 'deliveryRegions.id' | 'deliveryRegions.active' | 'deliveryRegions.createdDate' | '_createdDate', value: boolean) => DeliveryProfilesQueryBuilder;
    /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.
     * @documentationMaturity preview
     */
    ascending: (...propertyNames: Array<'_id' | 'name' | 'default' | 'deliveryRegions.id' | 'deliveryRegions.active' | 'deliveryRegions.destinations' | 'deliveryRegions.createdDate' | '_createdDate'>) => DeliveryProfilesQueryBuilder;
    /** @param propertyNames - Properties used in the sort. To sort by multiple properties, pass properties as additional arguments.
     * @documentationMaturity preview
     */
    descending: (...propertyNames: Array<'_id' | 'name' | 'default' | 'deliveryRegions.id' | 'deliveryRegions.active' | 'deliveryRegions.destinations' | 'deliveryRegions.createdDate' | '_createdDate'>) => DeliveryProfilesQueryBuilder;
    /** @param limit - Number of items to return, which is also the `pageSize` of the results object.
     * @documentationMaturity preview
     */
    limit: (limit: number) => DeliveryProfilesQueryBuilder;
    /** @param cursor - A pointer to specific record
     * @documentationMaturity preview
     */
    skipTo: (cursor: string) => DeliveryProfilesQueryBuilder;
    /** @documentationMaturity preview */
    find: () => Promise<DeliveryProfilesQueryResult>;
}
/**
 * Creates a new DeliveryRegion in an existing DeliveryProfile.
 * @param deliveryProfileId - delivery profile id to associated with the DeliveryRegion
 * @param deliveryRegion - DeliveryRegion to be created
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryProfileId
 * @requiredField deliveryRegion
 * @requiredField deliveryRegion.deliveryCarriers.backupRate.rate
 * @requiredField deliveryRegion.destinations.countryCode
 * @requiredField deliveryRegion.name
 * @permissionId ECOM.DELIVERY_REGION_CREATE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function addDeliveryRegion(deliveryProfileId: string, deliveryRegion: DeliveryRegion, options?: AddDeliveryRegionOptions): Promise<AddDeliveryRegionResponse & AddDeliveryRegionResponseNonNullableFields>;
interface AddDeliveryRegionOptions {
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
/**
 * Update a DeliveryRegion, supports partial update
 * Pass the latest `revision` for a successful update
 *
 * This method does not allow setting or updating the delivery delivery_carriers in this delivery_region.
 * Use AddDeliveryCarrier, UpdateDeliveryCarrier and RemoveDeliveryCarrier for these functionalities.
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryRegion
 * @requiredField identifiers
 * @requiredField identifiers.deliveryProfileId
 * @requiredField identifiers.deliveryRegionId
 * @permissionId ECOM.DELIVERY_REGION_UPDATE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function updateDeliveryRegion(identifiers: UpdateDeliveryRegionIdentifiers, deliveryRegion: UpdateDeliveryRegion, options?: UpdateDeliveryRegionOptions): Promise<UpdateDeliveryRegionResponse & UpdateDeliveryRegionResponseNonNullableFields>;
interface UpdateDeliveryRegionIdentifiers {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /**
     * The delivery region id.
     * @readonly
     */
    deliveryRegionId?: string | null;
}
interface UpdateDeliveryRegion {
    /**
     * The delivery region id.
     * @readonly
     */
    _id?: string | null;
    /** Optional name of the rule, for example: "Domestic". */
    name?: string | null;
    /** Indicates that this rule is active, default value is true. */
    active?: boolean | null;
    /**
     * The spi implementers id of shipping-rates spi, assigned to this rule.
     * @readonly
     */
    deliveryCarriers?: DeliveryCarrier[];
    /** The operation region of this rule, if empty than it is global. */
    destinations?: Destination[];
    /**
     * Represents the time this Profile was created
     * @readonly
     */
    _createdDate?: Date | null;
}
interface UpdateDeliveryRegionOptions {
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
/**
 * Delete a DeliveryRegion
 * @public
 * @documentationMaturity preview
 * @requiredField identifiers
 * @requiredField identifiers.deliveryProfileId
 * @requiredField identifiers.deliveryRegionId
 * @permissionId ECOM.DELIVERY_REGION_DELETE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function removeDeliveryRegion(identifiers: RemoveDeliveryRegionIdentifiers, options?: RemoveDeliveryRegionOptions): Promise<RemoveDeliveryRegionResponse & RemoveDeliveryRegionResponseNonNullableFields>;
interface RemoveDeliveryRegionIdentifiers {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /** Id of the DeliveryRegion to delete */
    deliveryRegionId: string;
}
interface RemoveDeliveryRegionOptions {
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
/**
 * Add a delivery_carrier to a delivery region
 * @param deliveryRegionId - delivery_region id to associated with the delivery_carrier.
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryRegionId
 * @requiredField options
 * @requiredField options.deliveryCarrier
 * @requiredField options.deliveryCarrier.backupRate.rate
 * @permissionId ECOM.DELIVERY_CARRIER_ADD
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function addDeliveryCarrier(deliveryRegionId: string, options: AddDeliveryCarrierOptions): Promise<AddDeliveryCarrierResponse & AddDeliveryCarrierResponseNonNullableFields>;
interface AddDeliveryCarrierOptions {
    /** delivery_carrier to be added. */
    deliveryCarrier: DeliveryCarrier;
}
/**
 * Remove a delivery_carrier from a delivery region
 * @param deliveryRegionId - Id of the DeliveryRegion
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryRegionId
 * @requiredField options
 * @requiredField options.appId
 * @permissionId ECOM.DELIVERY_CARRIER_REMOVE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function removeDeliveryCarrier(deliveryRegionId: string, options: RemoveDeliveryCarrierOptions): Promise<RemoveDeliveryCarrierResponse & RemoveDeliveryCarrierResponseNonNullableFields>;
interface RemoveDeliveryCarrierOptions {
    /** DeliveryCarrier app id to be removed. */
    appId: string;
}
/**
 * Update a delivery carrier in a delivery region
 * @param deliveryRegionId - DeliveryRegion id
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryRegionId
 * @requiredField options.deliveryCarrier.appId
 * @permissionId ECOM.DELIVERY_CARRIER_UPDATE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function updateDeliveryCarrier(deliveryRegionId: string, options?: UpdateDeliveryCarrierOptions): Promise<UpdateDeliveryCarrierResponse & UpdateDeliveryCarrierResponseNonNullableFields>;
interface UpdateDeliveryCarrierOptions {
    /** Updated delivery_carrier */
    deliveryCarrier?: DeliveryCarrier;
}
/**
 * List all installed delivery carriers in order to set their ids in delivery rules
 * @public
 * @documentationMaturity preview
 * @permissionId ECOM.DELIVERY_CARRIER_DETAILS_READ
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function listDeliveryCarrierDetails(): Promise<ListDeliveryCarrierDetailsResponse & ListDeliveryCarrierDetailsResponseNonNullableFields>;
/**
 * Get delivery carrier settings for a delivery profile and delivery region.
 * These are returned in a table format for the dashboard.
 * @param deliveryProfileId - Delivery profile id.
 * @public
 * @documentationMaturity preview
 * @requiredField deliveryProfileId
 * @permissionId ECOM.DELIVERY_CARRIER_READ
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Read eCommerce - all read permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.READ-ECOM
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function listDeliveryCarriers(deliveryProfileId: string, options?: ListDeliveryCarriersOptions): Promise<ListDeliveryCarriersResponse & ListDeliveryCarriersResponseNonNullableFields>;
interface ListDeliveryCarriersOptions {
    /** Delivery app ids to get settings for. */
    appIds?: string[];
}
/**
 * Updates extended fields of a DeliveryProfile without incrementing revision
 * @param _id - ID of the entity to update.
 * @param namespace - Identifier for the app whose extended fields are being updated.
 * @public
 * @documentationMaturity preview
 * @requiredField _id
 * @requiredField namespace
 * @requiredField options
 * @requiredField options.namespaceData
 * @permissionId ECOM.DELIVERY_PROFILE_UPDATE
 * @permissionScope Manage Stores - all permissions
 * @permissionScopeId SCOPE.DC-STORES-MEGA.MANAGE-STORES
 * @permissionScope Manage eCommerce - all permissions
 * @permissionScopeId SCOPE.DC-ECOM-MEGA.MANAGE-ECOM
 * @applicableIdentity APP
 */
declare function updateExtendedFields(_id: string, namespace: string, options: UpdateExtendedFieldsOptions): Promise<UpdateExtendedFieldsResponse & UpdateExtendedFieldsResponseNonNullableFields>;
interface UpdateExtendedFieldsOptions {
    /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */
    namespaceData: Record<string, any> | null;
}

export { type ActionEvent, type AddDeliveryCarrierOptions, type AddDeliveryCarrierRequest, type AddDeliveryCarrierResponse, type AddDeliveryCarrierResponseNonNullableFields, type AddDeliveryRegionOptions, type AddDeliveryRegionRequest, type AddDeliveryRegionResponse, type AddDeliveryRegionResponseNonNullableFields, type AdditionalCharge, type ApplicationError, type Asset, type BackupRate, type BaseEventMetadata, type BulkActionMetadata, ChargeType, type Column, type CreateDeliveryProfileRequest, type CreateDeliveryProfileResponse, type CreateDeliveryProfileResponseNonNullableFields, type CursorPaging, type CursorPagingMetadata, type CursorQuery, type CursorQueryPagingMethodOneOf, type Cursors, type DashboardTable, type DeleteContext, type DeleteDeliveryProfileRequest, type DeleteDeliveryProfileResponse, DeleteStatus, type DeliveryCarrier, type DeliveryCarrierDetails, type DeliveryCarrierRegionalSettings, type DeliveryProfile, type DeliveryProfileCreatedEnvelope, type DeliveryProfileDeletedEnvelope, type DeliveryProfileDeliveryRegionAddedEnvelope, type DeliveryProfileDeliveryRegionRemovedEnvelope, type DeliveryProfileDeliveryRegionUpdatedEnvelope, type DeliveryProfileNonNullableFields, type DeliveryProfileUpdatedEnvelope, type DeliveryProfilesQueryBuilder, type DeliveryProfilesQueryResult, type DeliveryRegion, type DeliveryRegionAdded, type DeliveryRegionRemoved, type DeliveryRegionUpdated, type Destination, type DomainEvent, type DomainEventBodyOneOf, type Empty, type EntityCreatedEvent, type EntityDeletedEvent, type EntityUpdatedEvent, type EventMetadata, type ExtendedFields, type GetDeliveryProfileRequest, type GetDeliveryProfileResponse, type GetDeliveryProfileResponseNonNullableFields, type IdentificationData, type IdentificationDataIdOneOf, type ItemMetadata, type ListDeliveryCarrierDetailsRequest, type ListDeliveryCarrierDetailsResponse, type ListDeliveryCarrierDetailsResponseNonNullableFields, type ListDeliveryCarriersOptions, type ListDeliveryCarriersRequest, type ListDeliveryCarriersResponse, type ListDeliveryCarriersResponseNonNullableFields, type ListDeliveryCarriersResult, type MessageEnvelope, type MetaSiteSpecialEvent, type MetaSiteSpecialEventPayloadOneOf, Namespace, type NamespaceChanged, type QueryDeliveryProfilesRequest, type QueryDeliveryProfilesResponse, type QueryDeliveryProfilesResponseNonNullableFields, type RemoveDeliveryCarrierOptions, type RemoveDeliveryCarrierRequest, type RemoveDeliveryCarrierResponse, type RemoveDeliveryCarrierResponseNonNullableFields, type RemoveDeliveryRegionIdentifiers, type RemoveDeliveryRegionOptions, type RemoveDeliveryRegionRequest, type RemoveDeliveryRegionResponse, type RemoveDeliveryRegionResponseNonNullableFields, type RestoreInfo, type Row, type ServiceProvisioned, type ServiceRemoved, type SiteCreated, SiteCreatedContext, type SiteDeleted, type SiteHardDeleted, type SiteMarkedAsTemplate, type SiteMarkedAsWixSite, type SitePublished, type SiteRenamed, type SiteTransferred, type SiteUndeleted, type SiteUnpublished, SortOrder, type Sorting, State, type StudioAssigned, type StudioUnassigned, type UpdateDeliveryCarrierOptions, type UpdateDeliveryCarrierRequest, type UpdateDeliveryCarrierResponse, type UpdateDeliveryCarrierResponseNonNullableFields, type UpdateDeliveryProfile, type UpdateDeliveryProfileRequest, type UpdateDeliveryProfileResponse, type UpdateDeliveryProfileResponseNonNullableFields, type UpdateDeliveryRegion, type UpdateDeliveryRegionIdentifiers, type UpdateDeliveryRegionOptions, type UpdateDeliveryRegionRequest, type UpdateDeliveryRegionResponse, type UpdateDeliveryRegionResponseNonNullableFields, type UpdateExtendedFieldsOptions, type UpdateExtendedFieldsRequest, type UpdateExtendedFieldsResponse, type UpdateExtendedFieldsResponseNonNullableFields, WebhookIdentityType, addDeliveryCarrier, addDeliveryRegion, createDeliveryProfile, deleteDeliveryProfile, getDeliveryProfile, listDeliveryCarrierDetails, listDeliveryCarriers, onDeliveryProfileCreated, onDeliveryProfileDeleted, onDeliveryProfileDeliveryRegionAdded, onDeliveryProfileDeliveryRegionRemoved, onDeliveryProfileDeliveryRegionUpdated, onDeliveryProfileUpdated, queryDeliveryProfiles, removeDeliveryCarrier, removeDeliveryRegion, updateDeliveryCarrier, updateDeliveryProfile, updateDeliveryRegion, updateExtendedFields };
