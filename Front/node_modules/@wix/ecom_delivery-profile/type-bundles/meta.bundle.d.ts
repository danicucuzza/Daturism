/**
 * A DeliveryProfile is a ...
 * You can ...
 * Read more about DeliveryProfiles
 * in this [article](<LINK_TO_KB_ARTICLE>).
 */
interface DeliveryProfile$1 {
    /**
     * DeliveryProfile ID.
     * @readonly
     */
    id?: string | null;
    /** DeliveryProfile name. */
    name?: string | null;
    /**
     * Indicates that this DeliveryProfile is the default DeliveryProfile.
     * @readonly
     */
    default?: boolean | null;
    /** A list of DeliveryProfile regions. */
    deliveryRegions?: DeliveryRegion$1[];
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
    /**
     * Date and time the DeliveryProfile was created.
     * @readonly
     */
    createdDate?: Date | null;
    /**
     * Date and time the DeliveryProfile was last updated.
     * @readonly
     */
    updatedDate?: Date | null;
    /** Extended fields. */
    extendedFields?: ExtendedFields$1;
}
/** DeliveryRegion can be used to config a Delivery Destinations with its providers */
interface DeliveryRegion$1 {
    /**
     * The delivery region id.
     * @readonly
     */
    id?: string | null;
    /** Optional name of the rule, for example: "Domestic". */
    name?: string | null;
    /** Indicates that this rule is active, default value is true. */
    active?: boolean | null;
    /**
     * The spi implementers id of shipping-rates spi, assigned to this rule.
     * @readonly
     */
    deliveryCarriers?: DeliveryCarrier$1[];
    /** The operation region of this rule, if empty than it is global. */
    destinations?: Destination$1[];
    /**
     * Represents the time this Profile was created
     * @readonly
     */
    createdDate?: Date | null;
}
interface DeliveryCarrier$1 {
    /** AppDefId of the provider as it is registered in the [app dashboard](https://dev.wix.com/dc3/my-apps/). Can be fetched by listDeliveryProvider api. */
    appId?: string;
    /** Backup rate to be used in case the cost returned by the provider is empty. */
    backupRate?: BackupRate$1;
    /** Additional charges to add to the delivery rate for this carrier */
    additionalCharges?: AdditionalCharge$1[];
}
interface BackupRate$1 {
    /** Default rate prefix that will concatenate to the delivery options the provider will offer. */
    prefix?: string | null;
    /** Default rate price for all delivery options that the provider will offer. */
    rate?: string | null;
    /** Should the default rate be used. Default value is false. */
    enabled?: boolean | null;
}
interface AdditionalCharge$1 {
    /** Additional charge type. */
    type?: ChargeType$1;
    /** Description of the additional charge. For example, `"Handling fee of $5 applied for gift wrapping"`. */
    description?: string | null;
    /** Cost of additional charge. For example, `12.5`. */
    price?: string;
}
declare enum ChargeType$1 {
    HANDLING_FEE = "HANDLING_FEE"
}
/** Defines the area inside one country that is relevant for this rule. */
interface Destination$1 {
    /** 2-letters code represents the country of the delivery destinations */
    countryCode?: string;
    /**
     * subdivisions - Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).
     * If empty, the rule applies to the entire country.
     */
    subdivisions?: string[];
}
interface ExtendedFields$1 {
    /**
     * Extended field data. Each key corresponds to the namespace of the app that created the extended fields.
     * The value of each key is structured according to the schema defined when the extended fields were configured.
     *
     * You can only access fields for which you have the appropriate permissions.
     *
     * Learn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).
     */
    namespaces?: Record<string, Record<string, any>>;
}
interface CreateDeliveryProfileRequest$1 {
    /** DeliveryProfile to be created. */
    deliveryProfile: DeliveryProfile$1;
}
interface CreateDeliveryProfileResponse$1 {
    /** The created DeliveryProfile. */
    deliveryProfile?: DeliveryProfile$1;
}
interface GetDeliveryProfileRequest$1 {
    /** ID of the DeliveryProfile to retrieve. */
    deliveryProfileId: string;
}
interface GetDeliveryProfileResponse$1 {
    /** The requested DeliveryProfile. */
    deliveryProfile?: DeliveryProfile$1;
}
interface UpdateDeliveryProfileRequest$1 {
    /** DeliveryProfile to be updated, may be partial. */
    deliveryProfile: DeliveryProfile$1;
}
interface UpdateDeliveryProfileResponse$1 {
    /** Updated DeliveryProfile. */
    deliveryProfile?: DeliveryProfile$1;
}
interface DeleteDeliveryProfileRequest$1 {
    /** Id of the DeliveryProfile to delete. */
    deliveryProfileId: string;
}
interface DeleteDeliveryProfileResponse$1 {
}
interface QueryDeliveryProfilesRequest$1 {
    /** WQL expression. */
    query?: CursorQuery$1;
}
interface CursorQuery$1 extends CursorQueryPagingMethodOneOf$1 {
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging$1;
    /**
     * Filter object in the following format:
     * `"filter" : {
     * "fieldName1": "value1",
     * "fieldName2":{"$operator":"value2"}
     * }`
     * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`
     */
    filter?: Record<string, any> | null;
    /**
     * Sort object in the following format:
     * `[{"fieldName":"sortField1","order":"ASC"},{"fieldName":"sortField2","order":"DESC"}]`
     */
    sort?: Sorting$1[];
}
/** @oneof */
interface CursorQueryPagingMethodOneOf$1 {
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging$1;
}
interface Sorting$1 {
    /** Name of the field to sort by. */
    fieldName?: string;
    /** Sort order. */
    order?: SortOrder$1;
}
declare enum SortOrder$1 {
    ASC = "ASC",
    DESC = "DESC"
}
interface CursorPaging$1 {
    /** Maximum number of items to return in the results. */
    limit?: number | null;
    /**
     * Pointer to the next or previous page in the list of results.
     *
     * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.
     * Not relevant for the first request.
     */
    cursor?: string | null;
}
interface QueryDeliveryProfilesResponse$1 {
    /** List of DeliveryProfiles. */
    deliveryProfiles?: DeliveryProfile$1[];
    /** Paging metadata */
    pagingMetadata?: CursorPagingMetadata$1;
}
interface CursorPagingMetadata$1 {
    /** Number of items returned in the response. */
    count?: number | null;
    /** Cursor strings that point to the next page, previous page, or both. */
    cursors?: Cursors$1;
    /**
     * Whether there are more pages to retrieve following the current page.
     *
     * + `true`: Another page of results can be retrieved.
     * + `false`: This is the last page.
     */
    hasNext?: boolean | null;
}
interface Cursors$1 {
    /** Cursor string pointing to the next page in the list of results. */
    next?: string | null;
    /** Cursor pointing to the previous page in the list of results. */
    prev?: string | null;
}
interface AddDeliveryRegionRequest$1 {
    /** delivery profile id to associated with the DeliveryRegion */
    deliveryProfileId: string;
    /** DeliveryRegion to be created */
    deliveryRegion: DeliveryRegion$1;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface AddDeliveryRegionResponse$1 {
    /** The updated DeliveryProfile with the new DeliveryRegion */
    deliveryProfile?: DeliveryProfile$1;
}
interface UpdateDeliveryRegionRequest$1 {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /** DeliveryRegion to be updated, may be partial */
    deliveryRegion: DeliveryRegion$1;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface UpdateDeliveryRegionResponse$1 {
    /** The updated DeliveryProfile with the updated DeliveryRegion */
    deliveryProfile?: DeliveryProfile$1;
}
interface RemoveDeliveryRegionRequest$1 {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /** Id of the DeliveryRegion to delete */
    deliveryRegionId: string;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface RemoveDeliveryRegionResponse$1 {
    /** The updated DeliveryProfile without DeliveryRegion */
    deliveryProfile?: DeliveryProfile$1;
}
interface AddDeliveryCarrierRequest$1 {
    /** delivery_region id to associated with the delivery_carrier. */
    deliveryRegionId: string;
    /** delivery_carrier to be added. */
    deliveryCarrier: DeliveryCarrier$1;
}
interface AddDeliveryCarrierResponse$1 {
    /** The updated DeliveryProfile */
    deliveryProfile?: DeliveryProfile$1;
}
interface RemoveDeliveryCarrierRequest$1 {
    /** Id of the DeliveryRegion */
    deliveryRegionId: string;
    /** DeliveryCarrier app id to be removed. */
    appId: string;
}
interface RemoveDeliveryCarrierResponse$1 {
    /** The updated DeliveryProfile */
    deliveryProfile?: DeliveryProfile$1;
}
interface UpdateDeliveryCarrierRequest$1 {
    /** DeliveryRegion id */
    deliveryRegionId: string;
    /** Updated delivery_carrier */
    deliveryCarrier?: DeliveryCarrier$1;
}
interface UpdateDeliveryCarrierResponse$1 {
    /** The updated DeliveryProfile with the updated DeliveryCarrier */
    deliveryProfile?: DeliveryProfile$1;
}
interface ListDeliveryCarrierDetailsRequest$1 {
}
interface ListDeliveryCarrierDetailsResponse$1 {
    /** The list of carrier or multi-carrier services that has implemented the spi and installed on the current context(site) */
    deliveryCarrierDetails?: DeliveryCarrierDetails$1[];
}
interface DeliveryCarrierDetails$1 {
    /** The id of the provider. */
    id?: string;
    /** The name of the Provider. */
    displayName?: string;
    /** Provider's description. */
    description?: string | null;
    /** A link to learn more about the provider. */
    learnMoreUrl?: string | null;
    /** Dashboard URL for the provider. */
    dashboardUrl?: string | null;
    /** If the provider fallback definition is mandatory. */
    fallbackDefinitionMandatory?: boolean | null;
    /** Thumbnail image for provider. */
    thumbnailUrl?: string | null;
    /** feature toggle initialized with default value = false. should be true if implemented by spi provider */
    toggleGetCarrierSettingsEnabled?: boolean;
}
interface ListDeliveryCarriersRequest$1 {
    /** Delivery profile id. */
    deliveryProfileId: string;
    /** Delivery app ids to get settings for. */
    appIds?: string[];
}
interface ListDeliveryCarriersResponse$1 {
    /** The list of delivery settings for the given requests */
    results?: ListDeliveryCarriersResult$1[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata$1;
}
interface ListDeliveryCarriersResult$1 {
    /** Information about successful action or error for failure. */
    deliveryCarrierMetadata?: ItemMetadata$1;
    /** The delivery carrier details */
    deliveryCarrierDetails?: DeliveryCarrierDetails$1;
    /** The delivery settings for the delivery profile and delivery region. */
    deliveryCarrierRegionalSettings?: DeliveryCarrierRegionalSettings$1[];
}
interface ItemMetadata$1 {
    /** Item ID. Should always be available, unless it's impossible (for example, when failing to create an item). */
    id?: string | null;
    /** Whether the requested action was successful for this item. When `false`, the `error` field is populated. */
    success?: boolean;
    /** Details about the error in case of failure. */
    error?: ApplicationError$1;
}
interface ApplicationError$1 {
    /** Error code. */
    code?: string;
    /** Description of the error. */
    description?: string;
    /** Data related to the error. */
    data?: Record<string, any> | null;
}
interface DeliveryCarrierRegionalSettings$1 {
    /** The delivery rule id. */
    deliveryRegionId?: string;
    /** The shipping table values that are associated with the delivery rule. Can be multiple if the provider is an aggregator of multiple carriers. */
    dashboardTables?: DashboardTable$1[];
}
interface DashboardTable$1 {
    /** The title of the delivery settings that will be displayed in the UI. */
    title?: string;
    /** The columns of the delivery settings that will be displayed in the UI. */
    columns?: Column$1[];
    /** The content of the delivery settings. Each row is a map of column name to value. */
    rows?: Row$1[];
}
interface Column$1 {
    /** The name of the column. This is used to get the data from the row. */
    key?: string;
    /** The title of the column that will be displayed in the UI. */
    name?: string;
}
interface Row$1 {
    /** The external key of the data presented in a row. This is used to identify the row in the UI for editing. */
    key?: string;
    /**
     * The data presented in the row. The key is the column `name` and the value is the data in the specific row and column.
     * Data will be in JSON format.
     */
    data?: Record<string, any> | null;
}
interface BulkActionMetadata$1 {
    /** Number of items that were successfully processed. */
    totalSuccesses?: number;
    /** Number of items that couldn't be processed. */
    totalFailures?: number;
    /** Number of failures without details because detailed failure threshold was exceeded. */
    undetailedFailures?: number;
}
interface UpdateExtendedFieldsRequest$1 {
    /** ID of the entity to update. */
    id: string;
    /** Identifier for the app whose extended fields are being updated. */
    namespace: string;
    /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */
    namespaceData: Record<string, any> | null;
}
interface UpdateExtendedFieldsResponse$1 {
    /** Updated DeliveryProfile. */
    deliveryProfile?: DeliveryProfile$1;
}
interface AdditionalChargeNonNullableFields$1 {
    type: ChargeType$1;
    price: string;
}
interface DeliveryCarrierNonNullableFields$1 {
    appId: string;
    additionalCharges: AdditionalChargeNonNullableFields$1[];
}
interface DestinationNonNullableFields$1 {
    countryCode: string;
    subdivisions: string[];
}
interface DeliveryRegionNonNullableFields$1 {
    deliveryCarriers: DeliveryCarrierNonNullableFields$1[];
    destinations: DestinationNonNullableFields$1[];
}
interface DeliveryProfileNonNullableFields$1 {
    deliveryRegions: DeliveryRegionNonNullableFields$1[];
}
interface CreateDeliveryProfileResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface GetDeliveryProfileResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface UpdateDeliveryProfileResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface QueryDeliveryProfilesResponseNonNullableFields$1 {
    deliveryProfiles: DeliveryProfileNonNullableFields$1[];
}
interface AddDeliveryRegionResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface UpdateDeliveryRegionResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface RemoveDeliveryRegionResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface AddDeliveryCarrierResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface RemoveDeliveryCarrierResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface UpdateDeliveryCarrierResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}
interface DeliveryCarrierDetailsNonNullableFields$1 {
    id: string;
    displayName: string;
    toggleGetCarrierSettingsEnabled: boolean;
}
interface ListDeliveryCarrierDetailsResponseNonNullableFields$1 {
    deliveryCarrierDetails: DeliveryCarrierDetailsNonNullableFields$1[];
}
interface ApplicationErrorNonNullableFields$1 {
    code: string;
    description: string;
}
interface ItemMetadataNonNullableFields$1 {
    success: boolean;
    error?: ApplicationErrorNonNullableFields$1;
}
interface ColumnNonNullableFields$1 {
    key: string;
    name: string;
}
interface RowNonNullableFields$1 {
    key: string;
}
interface DashboardTableNonNullableFields$1 {
    title: string;
    columns: ColumnNonNullableFields$1[];
    rows: RowNonNullableFields$1[];
}
interface DeliveryCarrierRegionalSettingsNonNullableFields$1 {
    deliveryRegionId: string;
    dashboardTables: DashboardTableNonNullableFields$1[];
}
interface ListDeliveryCarriersResultNonNullableFields$1 {
    deliveryCarrierMetadata?: ItemMetadataNonNullableFields$1;
    deliveryCarrierDetails?: DeliveryCarrierDetailsNonNullableFields$1;
    deliveryCarrierRegionalSettings: DeliveryCarrierRegionalSettingsNonNullableFields$1[];
}
interface BulkActionMetadataNonNullableFields$1 {
    totalSuccesses: number;
    totalFailures: number;
    undetailedFailures: number;
}
interface ListDeliveryCarriersResponseNonNullableFields$1 {
    results: ListDeliveryCarriersResultNonNullableFields$1[];
    bulkActionMetadata?: BulkActionMetadataNonNullableFields$1;
}
interface UpdateExtendedFieldsResponseNonNullableFields$1 {
    deliveryProfile?: DeliveryProfileNonNullableFields$1;
}

/**
 * A DeliveryProfile is a ...
 * You can ...
 * Read more about DeliveryProfiles
 * in this [article](<LINK_TO_KB_ARTICLE>).
 */
interface DeliveryProfile {
    /**
     * DeliveryProfile ID.
     * @readonly
     */
    _id?: string | null;
    /** DeliveryProfile name. */
    name?: string | null;
    /**
     * Indicates that this DeliveryProfile is the default DeliveryProfile.
     * @readonly
     */
    default?: boolean | null;
    /** A list of DeliveryProfile regions. */
    deliveryRegions?: DeliveryRegion[];
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
    /**
     * Date and time the DeliveryProfile was created.
     * @readonly
     */
    _createdDate?: Date | null;
    /**
     * Date and time the DeliveryProfile was last updated.
     * @readonly
     */
    _updatedDate?: Date | null;
    /** Extended fields. */
    extendedFields?: ExtendedFields;
}
/** DeliveryRegion can be used to config a Delivery Destinations with its providers */
interface DeliveryRegion {
    /**
     * The delivery region id.
     * @readonly
     */
    _id?: string | null;
    /** Optional name of the rule, for example: "Domestic". */
    name?: string | null;
    /** Indicates that this rule is active, default value is true. */
    active?: boolean | null;
    /**
     * The spi implementers id of shipping-rates spi, assigned to this rule.
     * @readonly
     */
    deliveryCarriers?: DeliveryCarrier[];
    /** The operation region of this rule, if empty than it is global. */
    destinations?: Destination[];
    /**
     * Represents the time this Profile was created
     * @readonly
     */
    _createdDate?: Date | null;
}
interface DeliveryCarrier {
    /** AppDefId of the provider as it is registered in the [app dashboard](https://dev.wix.com/dc3/my-apps/). Can be fetched by listDeliveryProvider api. */
    appId?: string;
    /** Backup rate to be used in case the cost returned by the provider is empty. */
    backupRate?: BackupRate;
    /** Additional charges to add to the delivery rate for this carrier */
    additionalCharges?: AdditionalCharge[];
}
interface BackupRate {
    /** Default rate prefix that will concatenate to the delivery options the provider will offer. */
    prefix?: string | null;
    /** Default rate price for all delivery options that the provider will offer. */
    rate?: string | null;
    /** Should the default rate be used. Default value is false. */
    enabled?: boolean | null;
}
interface AdditionalCharge {
    /** Additional charge type. */
    type?: ChargeType;
    /** Description of the additional charge. For example, `"Handling fee of $5 applied for gift wrapping"`. */
    description?: string | null;
    /** Cost of additional charge. For example, `12.5`. */
    price?: string;
}
declare enum ChargeType {
    HANDLING_FEE = "HANDLING_FEE"
}
/** Defines the area inside one country that is relevant for this rule. */
interface Destination {
    /** 2-letters code represents the country of the delivery destinations */
    countryCode?: string;
    /**
     * subdivisions - Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).
     * If empty, the rule applies to the entire country.
     */
    subdivisions?: string[];
}
interface ExtendedFields {
    /**
     * Extended field data. Each key corresponds to the namespace of the app that created the extended fields.
     * The value of each key is structured according to the schema defined when the extended fields were configured.
     *
     * You can only access fields for which you have the appropriate permissions.
     *
     * Learn more about [extended fields](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields).
     */
    namespaces?: Record<string, Record<string, any>>;
}
interface CreateDeliveryProfileRequest {
    /** DeliveryProfile to be created. */
    deliveryProfile: DeliveryProfile;
}
interface CreateDeliveryProfileResponse {
    /** The created DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface GetDeliveryProfileRequest {
    /** ID of the DeliveryProfile to retrieve. */
    deliveryProfileId: string;
}
interface GetDeliveryProfileResponse {
    /** The requested DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface UpdateDeliveryProfileRequest {
    /** DeliveryProfile to be updated, may be partial. */
    deliveryProfile: DeliveryProfile;
}
interface UpdateDeliveryProfileResponse {
    /** Updated DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface DeleteDeliveryProfileRequest {
    /** Id of the DeliveryProfile to delete. */
    deliveryProfileId: string;
}
interface DeleteDeliveryProfileResponse {
}
interface QueryDeliveryProfilesRequest {
    /** WQL expression. */
    query?: CursorQuery;
}
interface CursorQuery extends CursorQueryPagingMethodOneOf {
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
    /**
     * Filter object in the following format:
     * `"filter" : {
     * "fieldName1": "value1",
     * "fieldName2":{"$operator":"value2"}
     * }`
     * Example of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`
     */
    filter?: Record<string, any> | null;
    /**
     * Sort object in the following format:
     * `[{"fieldName":"sortField1","order":"ASC"},{"fieldName":"sortField2","order":"DESC"}]`
     */
    sort?: Sorting[];
}
/** @oneof */
interface CursorQueryPagingMethodOneOf {
    /** Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`. */
    cursorPaging?: CursorPaging;
}
interface Sorting {
    /** Name of the field to sort by. */
    fieldName?: string;
    /** Sort order. */
    order?: SortOrder;
}
declare enum SortOrder {
    ASC = "ASC",
    DESC = "DESC"
}
interface CursorPaging {
    /** Maximum number of items to return in the results. */
    limit?: number | null;
    /**
     * Pointer to the next or previous page in the list of results.
     *
     * Pass the relevant cursor token from the `pagingMetadata` object in the previous call's response.
     * Not relevant for the first request.
     */
    cursor?: string | null;
}
interface QueryDeliveryProfilesResponse {
    /** List of DeliveryProfiles. */
    deliveryProfiles?: DeliveryProfile[];
    /** Paging metadata */
    pagingMetadata?: CursorPagingMetadata;
}
interface CursorPagingMetadata {
    /** Number of items returned in the response. */
    count?: number | null;
    /** Cursor strings that point to the next page, previous page, or both. */
    cursors?: Cursors;
    /**
     * Whether there are more pages to retrieve following the current page.
     *
     * + `true`: Another page of results can be retrieved.
     * + `false`: This is the last page.
     */
    hasNext?: boolean | null;
}
interface Cursors {
    /** Cursor string pointing to the next page in the list of results. */
    next?: string | null;
    /** Cursor pointing to the previous page in the list of results. */
    prev?: string | null;
}
interface AddDeliveryRegionRequest {
    /** delivery profile id to associated with the DeliveryRegion */
    deliveryProfileId: string;
    /** DeliveryRegion to be created */
    deliveryRegion: DeliveryRegion;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface AddDeliveryRegionResponse {
    /** The updated DeliveryProfile with the new DeliveryRegion */
    deliveryProfile?: DeliveryProfile;
}
interface UpdateDeliveryRegionRequest {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /** DeliveryRegion to be updated, may be partial */
    deliveryRegion: DeliveryRegion;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface UpdateDeliveryRegionResponse {
    /** The updated DeliveryProfile with the updated DeliveryRegion */
    deliveryProfile?: DeliveryProfile;
}
interface RemoveDeliveryRegionRequest {
    /** DeliveryProfile id that owns the DeliveryRegion */
    deliveryProfileId: string;
    /** Id of the DeliveryRegion to delete */
    deliveryRegionId: string;
    /**
     * DeliveryProfile revision.
     * @readonly
     */
    revision?: string | null;
}
interface RemoveDeliveryRegionResponse {
    /** The updated DeliveryProfile without DeliveryRegion */
    deliveryProfile?: DeliveryProfile;
}
interface AddDeliveryCarrierRequest {
    /** delivery_region id to associated with the delivery_carrier. */
    deliveryRegionId: string;
    /** delivery_carrier to be added. */
    deliveryCarrier: DeliveryCarrier;
}
interface AddDeliveryCarrierResponse {
    /** The updated DeliveryProfile */
    deliveryProfile?: DeliveryProfile;
}
interface RemoveDeliveryCarrierRequest {
    /** Id of the DeliveryRegion */
    deliveryRegionId: string;
    /** DeliveryCarrier app id to be removed. */
    appId: string;
}
interface RemoveDeliveryCarrierResponse {
    /** The updated DeliveryProfile */
    deliveryProfile?: DeliveryProfile;
}
interface UpdateDeliveryCarrierRequest {
    /** DeliveryRegion id */
    deliveryRegionId: string;
    /** Updated delivery_carrier */
    deliveryCarrier?: DeliveryCarrier;
}
interface UpdateDeliveryCarrierResponse {
    /** The updated DeliveryProfile with the updated DeliveryCarrier */
    deliveryProfile?: DeliveryProfile;
}
interface ListDeliveryCarrierDetailsRequest {
}
interface ListDeliveryCarrierDetailsResponse {
    /** The list of carrier or multi-carrier services that has implemented the spi and installed on the current context(site) */
    deliveryCarrierDetails?: DeliveryCarrierDetails[];
}
interface DeliveryCarrierDetails {
    /** The id of the provider. */
    _id?: string;
    /** The name of the Provider. */
    displayName?: string;
    /** Provider's description. */
    description?: string | null;
    /** A link to learn more about the provider. */
    learnMoreUrl?: string | null;
    /** Dashboard URL for the provider. */
    dashboardUrl?: string | null;
    /** If the provider fallback definition is mandatory. */
    fallbackDefinitionMandatory?: boolean | null;
    /** Thumbnail image for provider. */
    thumbnailUrl?: string | null;
    /** feature toggle initialized with default value = false. should be true if implemented by spi provider */
    toggleGetCarrierSettingsEnabled?: boolean;
}
interface ListDeliveryCarriersRequest {
    /** Delivery profile id. */
    deliveryProfileId: string;
    /** Delivery app ids to get settings for. */
    appIds?: string[];
}
interface ListDeliveryCarriersResponse {
    /** The list of delivery settings for the given requests */
    results?: ListDeliveryCarriersResult[];
    /** Bulk action metadata. */
    bulkActionMetadata?: BulkActionMetadata;
}
interface ListDeliveryCarriersResult {
    /** Information about successful action or error for failure. */
    deliveryCarrierMetadata?: ItemMetadata;
    /** The delivery carrier details */
    deliveryCarrierDetails?: DeliveryCarrierDetails;
    /** The delivery settings for the delivery profile and delivery region. */
    deliveryCarrierRegionalSettings?: DeliveryCarrierRegionalSettings[];
}
interface ItemMetadata {
    /** Item ID. Should always be available, unless it's impossible (for example, when failing to create an item). */
    _id?: string | null;
    /** Whether the requested action was successful for this item. When `false`, the `error` field is populated. */
    success?: boolean;
    /** Details about the error in case of failure. */
    error?: ApplicationError;
}
interface ApplicationError {
    /** Error code. */
    code?: string;
    /** Description of the error. */
    description?: string;
    /** Data related to the error. */
    data?: Record<string, any> | null;
}
interface DeliveryCarrierRegionalSettings {
    /** The delivery rule id. */
    deliveryRegionId?: string;
    /** The shipping table values that are associated with the delivery rule. Can be multiple if the provider is an aggregator of multiple carriers. */
    dashboardTables?: DashboardTable[];
}
interface DashboardTable {
    /** The title of the delivery settings that will be displayed in the UI. */
    title?: string;
    /** The columns of the delivery settings that will be displayed in the UI. */
    columns?: Column[];
    /** The content of the delivery settings. Each row is a map of column name to value. */
    rows?: Row[];
}
interface Column {
    /** The name of the column. This is used to get the data from the row. */
    key?: string;
    /** The title of the column that will be displayed in the UI. */
    name?: string;
}
interface Row {
    /** The external key of the data presented in a row. This is used to identify the row in the UI for editing. */
    key?: string;
    /**
     * The data presented in the row. The key is the column `name` and the value is the data in the specific row and column.
     * Data will be in JSON format.
     */
    data?: Record<string, any> | null;
}
interface BulkActionMetadata {
    /** Number of items that were successfully processed. */
    totalSuccesses?: number;
    /** Number of items that couldn't be processed. */
    totalFailures?: number;
    /** Number of failures without details because detailed failure threshold was exceeded. */
    undetailedFailures?: number;
}
interface UpdateExtendedFieldsRequest {
    /** ID of the entity to update. */
    _id: string;
    /** Identifier for the app whose extended fields are being updated. */
    namespace: string;
    /** Data to update. Structured according to the [schema](https://dev.wix.com/docs/rest/articles/getting-started/extended-fields#json-schema-for-extended-fields) defined when the extended fields were configured. */
    namespaceData: Record<string, any> | null;
}
interface UpdateExtendedFieldsResponse {
    /** Updated DeliveryProfile. */
    deliveryProfile?: DeliveryProfile;
}
interface AdditionalChargeNonNullableFields {
    type: ChargeType;
    price: string;
}
interface DeliveryCarrierNonNullableFields {
    appId: string;
    additionalCharges: AdditionalChargeNonNullableFields[];
}
interface DestinationNonNullableFields {
    countryCode: string;
    subdivisions: string[];
}
interface DeliveryRegionNonNullableFields {
    deliveryCarriers: DeliveryCarrierNonNullableFields[];
    destinations: DestinationNonNullableFields[];
}
interface DeliveryProfileNonNullableFields {
    deliveryRegions: DeliveryRegionNonNullableFields[];
}
interface CreateDeliveryProfileResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface GetDeliveryProfileResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface UpdateDeliveryProfileResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface QueryDeliveryProfilesResponseNonNullableFields {
    deliveryProfiles: DeliveryProfileNonNullableFields[];
}
interface AddDeliveryRegionResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface UpdateDeliveryRegionResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface RemoveDeliveryRegionResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface AddDeliveryCarrierResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface RemoveDeliveryCarrierResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface UpdateDeliveryCarrierResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}
interface DeliveryCarrierDetailsNonNullableFields {
    _id: string;
    displayName: string;
    toggleGetCarrierSettingsEnabled: boolean;
}
interface ListDeliveryCarrierDetailsResponseNonNullableFields {
    deliveryCarrierDetails: DeliveryCarrierDetailsNonNullableFields[];
}
interface ApplicationErrorNonNullableFields {
    code: string;
    description: string;
}
interface ItemMetadataNonNullableFields {
    success: boolean;
    error?: ApplicationErrorNonNullableFields;
}
interface ColumnNonNullableFields {
    key: string;
    name: string;
}
interface RowNonNullableFields {
    key: string;
}
interface DashboardTableNonNullableFields {
    title: string;
    columns: ColumnNonNullableFields[];
    rows: RowNonNullableFields[];
}
interface DeliveryCarrierRegionalSettingsNonNullableFields {
    deliveryRegionId: string;
    dashboardTables: DashboardTableNonNullableFields[];
}
interface ListDeliveryCarriersResultNonNullableFields {
    deliveryCarrierMetadata?: ItemMetadataNonNullableFields;
    deliveryCarrierDetails?: DeliveryCarrierDetailsNonNullableFields;
    deliveryCarrierRegionalSettings: DeliveryCarrierRegionalSettingsNonNullableFields[];
}
interface BulkActionMetadataNonNullableFields {
    totalSuccesses: number;
    totalFailures: number;
    undetailedFailures: number;
}
interface ListDeliveryCarriersResponseNonNullableFields {
    results: ListDeliveryCarriersResultNonNullableFields[];
    bulkActionMetadata?: BulkActionMetadataNonNullableFields;
}
interface UpdateExtendedFieldsResponseNonNullableFields {
    deliveryProfile?: DeliveryProfileNonNullableFields;
}

type __PublicMethodMetaInfo<K = string, M = unknown, T = unknown, S = unknown, Q = unknown, R = unknown> = {
    getUrl: (context: any) => string;
    httpMethod: K;
    path: string;
    pathParams: M;
    __requestType: T;
    __originalRequestType: S;
    __responseType: Q;
    __originalResponseType: R;
};
declare function createDeliveryProfile(): __PublicMethodMetaInfo<'POST', {}, CreateDeliveryProfileRequest, CreateDeliveryProfileRequest$1, CreateDeliveryProfileResponse & CreateDeliveryProfileResponseNonNullableFields, CreateDeliveryProfileResponse$1 & CreateDeliveryProfileResponseNonNullableFields$1>;
declare function getDeliveryProfile(): __PublicMethodMetaInfo<'GET', {
    deliveryProfileId: string;
}, GetDeliveryProfileRequest, GetDeliveryProfileRequest$1, GetDeliveryProfileResponse & GetDeliveryProfileResponseNonNullableFields, GetDeliveryProfileResponse$1 & GetDeliveryProfileResponseNonNullableFields$1>;
declare function updateDeliveryProfile(): __PublicMethodMetaInfo<'PATCH', {
    deliveryProfileId: string;
}, UpdateDeliveryProfileRequest, UpdateDeliveryProfileRequest$1, UpdateDeliveryProfileResponse & UpdateDeliveryProfileResponseNonNullableFields, UpdateDeliveryProfileResponse$1 & UpdateDeliveryProfileResponseNonNullableFields$1>;
declare function deleteDeliveryProfile(): __PublicMethodMetaInfo<'DELETE', {
    deliveryProfileId: string;
}, DeleteDeliveryProfileRequest, DeleteDeliveryProfileRequest$1, DeleteDeliveryProfileResponse, DeleteDeliveryProfileResponse$1>;
declare function queryDeliveryProfiles(): __PublicMethodMetaInfo<'GET', {}, QueryDeliveryProfilesRequest, QueryDeliveryProfilesRequest$1, QueryDeliveryProfilesResponse & QueryDeliveryProfilesResponseNonNullableFields, QueryDeliveryProfilesResponse$1 & QueryDeliveryProfilesResponseNonNullableFields$1>;
declare function addDeliveryRegion(): __PublicMethodMetaInfo<'POST', {
    deliveryProfileId: string;
}, AddDeliveryRegionRequest, AddDeliveryRegionRequest$1, AddDeliveryRegionResponse & AddDeliveryRegionResponseNonNullableFields, AddDeliveryRegionResponse$1 & AddDeliveryRegionResponseNonNullableFields$1>;
declare function updateDeliveryRegion(): __PublicMethodMetaInfo<'PATCH', {
    deliveryProfileId: string;
    deliveryRegionId: string;
}, UpdateDeliveryRegionRequest, UpdateDeliveryRegionRequest$1, UpdateDeliveryRegionResponse & UpdateDeliveryRegionResponseNonNullableFields, UpdateDeliveryRegionResponse$1 & UpdateDeliveryRegionResponseNonNullableFields$1>;
declare function removeDeliveryRegion(): __PublicMethodMetaInfo<'DELETE', {
    deliveryProfileId: string;
    deliveryRegionId: string;
}, RemoveDeliveryRegionRequest, RemoveDeliveryRegionRequest$1, RemoveDeliveryRegionResponse & RemoveDeliveryRegionResponseNonNullableFields, RemoveDeliveryRegionResponse$1 & RemoveDeliveryRegionResponseNonNullableFields$1>;
declare function addDeliveryCarrier(): __PublicMethodMetaInfo<'POST', {}, AddDeliveryCarrierRequest, AddDeliveryCarrierRequest$1, AddDeliveryCarrierResponse & AddDeliveryCarrierResponseNonNullableFields, AddDeliveryCarrierResponse$1 & AddDeliveryCarrierResponseNonNullableFields$1>;
declare function removeDeliveryCarrier(): __PublicMethodMetaInfo<'POST', {}, RemoveDeliveryCarrierRequest, RemoveDeliveryCarrierRequest$1, RemoveDeliveryCarrierResponse & RemoveDeliveryCarrierResponseNonNullableFields, RemoveDeliveryCarrierResponse$1 & RemoveDeliveryCarrierResponseNonNullableFields$1>;
declare function updateDeliveryCarrier(): __PublicMethodMetaInfo<'PATCH', {}, UpdateDeliveryCarrierRequest, UpdateDeliveryCarrierRequest$1, UpdateDeliveryCarrierResponse & UpdateDeliveryCarrierResponseNonNullableFields, UpdateDeliveryCarrierResponse$1 & UpdateDeliveryCarrierResponseNonNullableFields$1>;
declare function listDeliveryCarrierDetails(): __PublicMethodMetaInfo<'GET', {}, ListDeliveryCarrierDetailsRequest, ListDeliveryCarrierDetailsRequest$1, ListDeliveryCarrierDetailsResponse & ListDeliveryCarrierDetailsResponseNonNullableFields, ListDeliveryCarrierDetailsResponse$1 & ListDeliveryCarrierDetailsResponseNonNullableFields$1>;
declare function listDeliveryCarriers(): __PublicMethodMetaInfo<'POST', {
    deliveryProfileId: string;
}, ListDeliveryCarriersRequest, ListDeliveryCarriersRequest$1, ListDeliveryCarriersResponse & ListDeliveryCarriersResponseNonNullableFields, ListDeliveryCarriersResponse$1 & ListDeliveryCarriersResponseNonNullableFields$1>;
declare function updateExtendedFields(): __PublicMethodMetaInfo<'POST', {
    id: string;
}, UpdateExtendedFieldsRequest, UpdateExtendedFieldsRequest$1, UpdateExtendedFieldsResponse & UpdateExtendedFieldsResponseNonNullableFields, UpdateExtendedFieldsResponse$1 & UpdateExtendedFieldsResponseNonNullableFields$1>;

export { type __PublicMethodMetaInfo, addDeliveryCarrier, addDeliveryRegion, createDeliveryProfile, deleteDeliveryProfile, getDeliveryProfile, listDeliveryCarrierDetails, listDeliveryCarriers, queryDeliveryProfiles, removeDeliveryCarrier, removeDeliveryRegion, updateDeliveryCarrier, updateDeliveryProfile, updateDeliveryRegion, updateExtendedFields };
