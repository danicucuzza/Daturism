"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebhookIdentityType = exports.SortOrder = exports.ChannelType = exports.AttributionSource = exports.ActivityType = exports.LineItemQuantityChangeType = exports.OrderStatus = exports.FulfillmentStatus = exports.PaymentStatus = exports.NonDraftableReason = exports.DiscountType = exports.FileType = exports.RuleType = exports.PickupMethod = exports.WeightUnit = exports.EditingStatus = exports.DiscountReason = exports.AppliedDiscountDiscountType = exports.SourceType = exports.PickupDetailsPickupMethod = exports.VatType = exports.TaxableAddressType = exports.SubscriptionFrequency = exports.JurisdictionType = exports.PaymentOptionType = exports.ItemTypeItemType = exports.DescriptionLineType = void 0;
var DescriptionLineType;
(function (DescriptionLineType) {
    DescriptionLineType["UNRECOGNISED"] = "UNRECOGNISED";
    DescriptionLineType["PLAIN_TEXT"] = "PLAIN_TEXT";
    DescriptionLineType["COLOR"] = "COLOR";
})(DescriptionLineType || (exports.DescriptionLineType = DescriptionLineType = {}));
var ItemTypeItemType;
(function (ItemTypeItemType) {
    ItemTypeItemType["UNRECOGNISED"] = "UNRECOGNISED";
    ItemTypeItemType["PHYSICAL"] = "PHYSICAL";
    ItemTypeItemType["DIGITAL"] = "DIGITAL";
    ItemTypeItemType["GIFT_CARD"] = "GIFT_CARD";
    ItemTypeItemType["SERVICE"] = "SERVICE";
})(ItemTypeItemType || (exports.ItemTypeItemType = ItemTypeItemType = {}));
/** Type of selected payment option for catalog item */
var PaymentOptionType;
(function (PaymentOptionType) {
    /** The entire payment for this item happens as part of the checkout. */
    PaymentOptionType["FULL_PAYMENT_ONLINE"] = "FULL_PAYMENT_ONLINE";
    /** The entire payment for this item happens after the checkout. For example, when using cash, check, or other offline payment methods. */
    PaymentOptionType["FULL_PAYMENT_OFFLINE"] = "FULL_PAYMENT_OFFLINE";
    /** Payment for this item is done by charging a membership. When selected, `price` is `0`. */
    PaymentOptionType["MEMBERSHIP"] = "MEMBERSHIP";
    /** Partial payment to be paid upfront during the checkout. Initial amount to be paid for each line item is specified in `depositAmount`. */
    PaymentOptionType["DEPOSIT_ONLINE"] = "DEPOSIT_ONLINE";
    /** Payment for this item can only be done by charging a membership and must be manually redeemed in the dashboard by the site admin. When selected, `price` is `0`. */
    PaymentOptionType["MEMBERSHIP_OFFLINE"] = "MEMBERSHIP_OFFLINE";
})(PaymentOptionType || (exports.PaymentOptionType = PaymentOptionType = {}));
/** JurisdictionType represents the type of the jurisdiction in which this tax detail applies (e.g. Country,State,County,City,Special). */
var JurisdictionType;
(function (JurisdictionType) {
    JurisdictionType["UNDEFINED"] = "UNDEFINED";
    JurisdictionType["COUNTRY"] = "COUNTRY";
    JurisdictionType["STATE"] = "STATE";
    JurisdictionType["COUNTY"] = "COUNTY";
    JurisdictionType["CITY"] = "CITY";
    JurisdictionType["SPECIAL"] = "SPECIAL";
})(JurisdictionType || (exports.JurisdictionType = JurisdictionType = {}));
/** Frequency unit of recurring payment */
var SubscriptionFrequency;
(function (SubscriptionFrequency) {
    SubscriptionFrequency["UNDEFINED"] = "UNDEFINED";
    SubscriptionFrequency["DAY"] = "DAY";
    SubscriptionFrequency["WEEK"] = "WEEK";
    SubscriptionFrequency["MONTH"] = "MONTH";
    SubscriptionFrequency["YEAR"] = "YEAR";
})(SubscriptionFrequency || (exports.SubscriptionFrequency = SubscriptionFrequency = {}));
var TaxableAddressType;
(function (TaxableAddressType) {
    TaxableAddressType["UNKNOWN_TAXABLE_ADDRESS"] = "UNKNOWN_TAXABLE_ADDRESS";
    TaxableAddressType["BUSINESS"] = "BUSINESS";
    TaxableAddressType["BILLING"] = "BILLING";
    TaxableAddressType["SHIPPING"] = "SHIPPING";
})(TaxableAddressType || (exports.TaxableAddressType = TaxableAddressType = {}));
/** tax info types */
var VatType;
(function (VatType) {
    VatType["UNSPECIFIED"] = "UNSPECIFIED";
    /** CPF - for individual tax payers. */
    VatType["CPF"] = "CPF";
    /** CNPJ - for corporations */
    VatType["CNPJ"] = "CNPJ";
})(VatType || (exports.VatType = VatType = {}));
var PickupDetailsPickupMethod;
(function (PickupDetailsPickupMethod) {
    PickupDetailsPickupMethod["UNKNOWN_METHOD"] = "UNKNOWN_METHOD";
    PickupDetailsPickupMethod["STORE_PICKUP"] = "STORE_PICKUP";
    PickupDetailsPickupMethod["PICKUP_POINT"] = "PICKUP_POINT";
})(PickupDetailsPickupMethod || (exports.PickupDetailsPickupMethod = PickupDetailsPickupMethod = {}));
var SourceType;
(function (SourceType) {
    /** Part of the original order */
    SourceType["ORIGINAL_ORDER"] = "ORIGINAL_ORDER";
    /** Added by estimate * */
    SourceType["AUTOMATIC"] = "AUTOMATIC";
    /** Added manually to current draft order */
    SourceType["CUSTOM"] = "CUSTOM";
})(SourceType || (exports.SourceType = SourceType = {}));
var AppliedDiscountDiscountType;
(function (AppliedDiscountDiscountType) {
    AppliedDiscountDiscountType["GLOBAL"] = "GLOBAL";
    AppliedDiscountDiscountType["SPECIFIC_ITEMS"] = "SPECIFIC_ITEMS";
    AppliedDiscountDiscountType["SHIPPING"] = "SHIPPING";
})(AppliedDiscountDiscountType || (exports.AppliedDiscountDiscountType = AppliedDiscountDiscountType = {}));
var DiscountReason;
(function (DiscountReason) {
    DiscountReason["UNSPECIFIED"] = "UNSPECIFIED";
    DiscountReason["EXCHANGED_ITEMS"] = "EXCHANGED_ITEMS";
})(DiscountReason || (exports.DiscountReason = DiscountReason = {}));
var EditingStatus;
(function (EditingStatus) {
    /** DraftOrder is in draft state. */
    EditingStatus["DRAFT"] = "DRAFT";
    /** DraftOrder is in committed state. */
    EditingStatus["COMMITTED"] = "COMMITTED";
})(EditingStatus || (exports.EditingStatus = EditingStatus = {}));
var WeightUnit;
(function (WeightUnit) {
    /** Weight unit can't be classified, due to an error */
    WeightUnit["UNSPECIFIED_WEIGHT_UNIT"] = "UNSPECIFIED_WEIGHT_UNIT";
    /** Kilograms */
    WeightUnit["KG"] = "KG";
    /** Pounds */
    WeightUnit["LB"] = "LB";
})(WeightUnit || (exports.WeightUnit = WeightUnit = {}));
var PickupMethod;
(function (PickupMethod) {
    PickupMethod["UNKNOWN_METHOD"] = "UNKNOWN_METHOD";
    PickupMethod["STORE_PICKUP"] = "STORE_PICKUP";
    PickupMethod["PICKUP_POINT"] = "PICKUP_POINT";
})(PickupMethod || (exports.PickupMethod = PickupMethod = {}));
var RuleType;
(function (RuleType) {
    RuleType["VALIDATION"] = "VALIDATION";
    RuleType["OTHER"] = "OTHER";
    RuleType["MAX"] = "MAX";
    RuleType["MIN"] = "MIN";
    RuleType["MAX_LENGTH"] = "MAX_LENGTH";
    RuleType["MIN_LENGTH"] = "MIN_LENGTH";
    RuleType["MAX_SIZE"] = "MAX_SIZE";
    RuleType["MIN_SIZE"] = "MIN_SIZE";
    RuleType["FORMAT"] = "FORMAT";
    RuleType["DECIMAL_LTE"] = "DECIMAL_LTE";
    RuleType["DECIMAL_GTE"] = "DECIMAL_GTE";
    RuleType["DECIMAL_LT"] = "DECIMAL_LT";
    RuleType["DECIMAL_GT"] = "DECIMAL_GT";
    RuleType["DECIMAL_MAX_SCALE"] = "DECIMAL_MAX_SCALE";
    RuleType["INVALID_ENUM_VALUE"] = "INVALID_ENUM_VALUE";
    RuleType["REQUIRED_FIELD"] = "REQUIRED_FIELD";
    RuleType["FIELD_NOT_ALLOWED"] = "FIELD_NOT_ALLOWED";
    RuleType["ONE_OF_ALIGNMENT"] = "ONE_OF_ALIGNMENT";
})(RuleType || (exports.RuleType = RuleType = {}));
var FileType;
(function (FileType) {
    FileType["UNSPECIFIED"] = "UNSPECIFIED";
    FileType["SECURE_PICTURE"] = "SECURE_PICTURE";
    FileType["SECURE_VIDEO"] = "SECURE_VIDEO";
    FileType["SECURE_DOCUMENT"] = "SECURE_DOCUMENT";
    FileType["SECURE_MUSIC"] = "SECURE_MUSIC";
    FileType["SECURE_ARCHIVE"] = "SECURE_ARCHIVE";
})(FileType || (exports.FileType = FileType = {}));
var DiscountType;
(function (DiscountType) {
    DiscountType["UNKNOWN_TYPE"] = "UNKNOWN_TYPE";
    DiscountType["GLOBAL"] = "GLOBAL";
    DiscountType["SPECIFIC_ITEMS"] = "SPECIFIC_ITEMS";
    DiscountType["SHIPPING"] = "SHIPPING";
})(DiscountType || (exports.DiscountType = DiscountType = {}));
var NonDraftableReason;
(function (NonDraftableReason) {
    NonDraftableReason["UNSPECIFIED"] = "UNSPECIFIED";
    NonDraftableReason["PARTIALLY_OR_FULLY_REFUNDED"] = "PARTIALLY_OR_FULLY_REFUNDED";
    NonDraftableReason["UNSUPPORTED_CHANNEL_TYPE"] = "UNSUPPORTED_CHANNEL_TYPE";
    NonDraftableReason["ORDER_STATUS_IS_NOT_SUPPORTED"] = "ORDER_STATUS_IS_NOT_SUPPORTED";
    NonDraftableReason["ORDER_AND_SITE_CURRENCIES_ARE_INCONSISTENT"] = "ORDER_AND_SITE_CURRENCIES_ARE_INCONSISTENT";
    NonDraftableReason["ORDER_AND_SITE_WEIGHT_UNITS_ARE_INCONSISTENT"] = "ORDER_AND_SITE_WEIGHT_UNITS_ARE_INCONSISTENT";
    NonDraftableReason["AMOUNTS_DO_NOT_ADD_UP"] = "AMOUNTS_DO_NOT_ADD_UP";
    /** remove - this is not a reason, it's an error */
    NonDraftableReason["ORDER_NOT_FOUND"] = "ORDER_NOT_FOUND";
    NonDraftableReason["SUBSCRIPTION_LINE_ITEM_EXISTS"] = "SUBSCRIPTION_LINE_ITEM_EXISTS";
    NonDraftableReason["UNSUPPORTED_CATALOG_ITEM"] = "UNSUPPORTED_CATALOG_ITEM";
    NonDraftableReason["TAXABLE_EXISTING_ADDITIONAL_FEE"] = "TAXABLE_EXISTING_ADDITIONAL_FEE";
})(NonDraftableReason || (exports.NonDraftableReason = NonDraftableReason = {}));
var PaymentStatus;
(function (PaymentStatus) {
    PaymentStatus["UNSPECIFIED"] = "UNSPECIFIED";
    /** Order is not paid */
    PaymentStatus["NOT_PAID"] = "NOT_PAID";
    /** Order is paid */
    PaymentStatus["PAID"] = "PAID";
    /** Order was refunded, refund amount less than order total price */
    PaymentStatus["PARTIALLY_REFUNDED"] = "PARTIALLY_REFUNDED";
    /** Full order total price was refunded */
    PaymentStatus["FULLY_REFUNDED"] = "FULLY_REFUNDED";
    /** Payments received but not yet confirmed by the payment provider */
    PaymentStatus["PENDING"] = "PENDING";
    /** At least one payment was received and approved, covering less than total price amount */
    PaymentStatus["PARTIALLY_PAID"] = "PARTIALLY_PAID";
})(PaymentStatus || (exports.PaymentStatus = PaymentStatus = {}));
var FulfillmentStatus;
(function (FulfillmentStatus) {
    /** none of the order items are fulfilled or order was manually marked as unfulfilled */
    FulfillmentStatus["NOT_FULFILLED"] = "NOT_FULFILLED";
    /**
     * All of the order items are fulfilled or order was manually marked as fulfilled
     * Orders without shipping info are fulfilled automatically
     */
    FulfillmentStatus["FULFILLED"] = "FULFILLED";
    /** Some, but not all of the order items are fulfilled */
    FulfillmentStatus["PARTIALLY_FULFILLED"] = "PARTIALLY_FULFILLED";
})(FulfillmentStatus || (exports.FulfillmentStatus = FulfillmentStatus = {}));
var OrderStatus;
(function (OrderStatus) {
    OrderStatus["INITIALIZED"] = "INITIALIZED";
    OrderStatus["APPROVED"] = "APPROVED";
    OrderStatus["CANCELED"] = "CANCELED";
})(OrderStatus || (exports.OrderStatus = OrderStatus = {}));
var LineItemQuantityChangeType;
(function (LineItemQuantityChangeType) {
    LineItemQuantityChangeType["QUANTITY_INCREASED"] = "QUANTITY_INCREASED";
    LineItemQuantityChangeType["QUANTITY_DECREASED"] = "QUANTITY_DECREASED";
})(LineItemQuantityChangeType || (exports.LineItemQuantityChangeType = LineItemQuantityChangeType = {}));
var ActivityType;
(function (ActivityType) {
    ActivityType["ORDER_REFUNDED"] = "ORDER_REFUNDED";
    ActivityType["ORDER_PLACED"] = "ORDER_PLACED";
    ActivityType["ORDER_PAID"] = "ORDER_PAID";
    ActivityType["ORDER_FULFILLED"] = "ORDER_FULFILLED";
    ActivityType["ORDER_NOT_FULFILLED"] = "ORDER_NOT_FULFILLED";
    ActivityType["ORDER_CANCELED"] = "ORDER_CANCELED";
    ActivityType["DOWNLOAD_LINK_SENT"] = "DOWNLOAD_LINK_SENT";
    ActivityType["TRACKING_NUMBER_ADDED"] = "TRACKING_NUMBER_ADDED";
    ActivityType["TRACKING_NUMBER_EDITED"] = "TRACKING_NUMBER_EDITED";
    ActivityType["TRACKING_LINK_ADDED"] = "TRACKING_LINK_ADDED";
    ActivityType["SHIPPING_CONFIRMATION_EMAIL_SENT"] = "SHIPPING_CONFIRMATION_EMAIL_SENT";
    ActivityType["INVOICE_ADDED"] = "INVOICE_ADDED";
    ActivityType["INVOICE_REMOVED"] = "INVOICE_REMOVED";
    ActivityType["INVOICE_SENT"] = "INVOICE_SENT";
    ActivityType["FULFILLER_EMAIL_SENT"] = "FULFILLER_EMAIL_SENT";
    ActivityType["SHIPPING_ADDRESS_EDITED"] = "SHIPPING_ADDRESS_EDITED";
    ActivityType["EMAIL_EDITED"] = "EMAIL_EDITED";
    ActivityType["PICKUP_READY_EMAIL_SENT"] = "PICKUP_READY_EMAIL_SENT";
    ActivityType["CUSTOM_ACTIVITY"] = "CUSTOM_ACTIVITY";
    ActivityType["MERCHANT_COMMENT"] = "MERCHANT_COMMENT";
    ActivityType["ORDER_CREATED_FROM_EXCHANGE"] = "ORDER_CREATED_FROM_EXCHANGE";
    ActivityType["NEW_EXCHANGE_ORDER_CREATED"] = "NEW_EXCHANGE_ORDER_CREATED";
    ActivityType["ORDER_PARTIALLY_PAID"] = "ORDER_PARTIALLY_PAID";
    ActivityType["DRAFT_ORDER_CHANGES_APPLIED"] = "DRAFT_ORDER_CHANGES_APPLIED";
    ActivityType["SAVED_PAYMENT_METHOD"] = "SAVED_PAYMENT_METHOD";
})(ActivityType || (exports.ActivityType = ActivityType = {}));
var AttributionSource;
(function (AttributionSource) {
    AttributionSource["UNSPECIFIED"] = "UNSPECIFIED";
    AttributionSource["FACEBOOK_ADS"] = "FACEBOOK_ADS";
})(AttributionSource || (exports.AttributionSource = AttributionSource = {}));
var ChannelType;
(function (ChannelType) {
    ChannelType["UNSPECIFIED"] = "UNSPECIFIED";
    ChannelType["WEB"] = "WEB";
    ChannelType["POS"] = "POS";
    ChannelType["EBAY"] = "EBAY";
    ChannelType["AMAZON"] = "AMAZON";
    ChannelType["OTHER_PLATFORM"] = "OTHER_PLATFORM";
    ChannelType["WIX_APP_STORE"] = "WIX_APP_STORE";
    ChannelType["WIX_INVOICES"] = "WIX_INVOICES";
    ChannelType["BACKOFFICE_MERCHANT"] = "BACKOFFICE_MERCHANT";
    ChannelType["WISH"] = "WISH";
    ChannelType["CLASS_PASS"] = "CLASS_PASS";
    ChannelType["GLOBAL_E"] = "GLOBAL_E";
    ChannelType["FACEBOOK"] = "FACEBOOK";
    ChannelType["ETSY"] = "ETSY";
    ChannelType["TIKTOK"] = "TIKTOK";
    ChannelType["FAIRE_COM"] = "FAIRE_COM";
})(ChannelType || (exports.ChannelType = ChannelType = {}));
var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (exports.SortOrder = SortOrder = {}));
var WebhookIdentityType;
(function (WebhookIdentityType) {
    WebhookIdentityType["UNKNOWN"] = "UNKNOWN";
    WebhookIdentityType["ANONYMOUS_VISITOR"] = "ANONYMOUS_VISITOR";
    WebhookIdentityType["MEMBER"] = "MEMBER";
    WebhookIdentityType["WIX_USER"] = "WIX_USER";
    WebhookIdentityType["APP"] = "APP";
})(WebhookIdentityType || (exports.WebhookIdentityType = WebhookIdentityType = {}));
//# sourceMappingURL=ecom-v1-draft-order-draft-orders.types.js.map