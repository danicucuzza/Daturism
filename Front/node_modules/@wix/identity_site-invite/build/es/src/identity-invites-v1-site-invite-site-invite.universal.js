import { transformError as sdkTransformError } from '@wix/sdk-runtime/transform-error';
import { renameKeysFromSDKRequestToRESTRequest, renameKeysFromRESTResponseToSDKResponse, } from '@wix/sdk-runtime/rename-all-nested-keys';
import * as ambassadorWixIdentityInvitesV1SiteInvite from './identity-invites-v1-site-invite-site-invite.http';
/** Invite status stating whether the invite was accepted, waiting to be accepted, deleted etc.. */
export var InviteStatus;
(function (InviteStatus) {
    InviteStatus["Pending"] = "Pending";
    InviteStatus["Used"] = "Used";
    InviteStatus["Deleted"] = "Deleted";
    InviteStatus["Declined"] = "Declined";
    InviteStatus["Expired"] = "Expired";
})(InviteStatus || (InviteStatus = {}));
export var SortOrder;
(function (SortOrder) {
    SortOrder["ASC"] = "ASC";
    SortOrder["DESC"] = "DESC";
})(SortOrder || (SortOrder = {}));
/**
 * Creates and sends emails inviting potential site contributors to become contributors in the requesting site.
 * > **Important**: This call requires an account level API key and cannot be authenticated with the standard authorization header. API keys are currently available to selected beta users only.
 * @param policyIds - Role IDs, referred to as policy IDs, to assign to the contributors.
 * @public
 * @documentationMaturity preview
 * @requiredField options.emails
 * @requiredField policyIds
 * @permissionId site-users.send-invite
 */
export async function bulkInvite(policyIds, options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[2];
    const payload = renameKeysFromSDKRequestToRESTRequest({
        policyIds: policyIds,
        emails: options?.emails,
        invitePurpose: options?.invitePurpose,
        defaultEmailLanguage: options?.defaultEmailLanguage,
    });
    const reqOpts = ambassadorWixIdentityInvitesV1SiteInvite.bulkInvite(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {
                policyIds: '$[0]',
                emails: '$[1].emails',
                invitePurpose: '$[1].invitePurpose',
                defaultEmailLanguage: '$[1].defaultEmailLanguage',
            },
            singleArgumentUnchanged: false,
        }, ['policyIds', 'options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
/**
 * Resends the email invitation to a potential site contributor.
 * > **Important**: This call requires an account level API key and cannot be authenticated with the standard authorization header. API keys are currently available to selected beta users only.
 * @param inviteId - Invite ID.
 * @public
 * @documentationMaturity preview
 * @requiredField inviteId
 * @permissionId site-users.send-invite
 */
export async function resendInvite(inviteId, options) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[2];
    const payload = renameKeysFromSDKRequestToRESTRequest({
        inviteId: inviteId,
        defaultEmailLanguage: options?.defaultEmailLanguage,
    });
    const reqOpts = ambassadorWixIdentityInvitesV1SiteInvite.resendInvite(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
        return renameKeysFromRESTResponseToSDKResponse(result.data);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: {
                inviteId: '$[0]',
                defaultEmailLanguage: '$[1].defaultEmailLanguage',
            },
            singleArgumentUnchanged: false,
        }, ['inviteId', 'options']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
/**
 * Revokes a pending site contributor invite.
 * > **Important**: This call requires an account level API key and cannot be authenticated with the standard authorization header. API keys are currently available to selected beta users only.
 * @param inviteId - Invite ID.
 * @public
 * @documentationMaturity preview
 * @requiredField inviteId
 * @permissionId site-users.delete-invite
 */
export async function revokeInvite(inviteId) {
    // @ts-ignore
    const { httpClient, sideEffects } = arguments[1];
    const payload = renameKeysFromSDKRequestToRESTRequest({ inviteId: inviteId });
    const reqOpts = ambassadorWixIdentityInvitesV1SiteInvite.revokeInvite(payload);
    sideEffects?.onSiteCall?.();
    try {
        const result = await httpClient.request(reqOpts);
        sideEffects?.onSuccess?.(result);
    }
    catch (err) {
        const transformedError = sdkTransformError(err, {
            spreadPathsToArguments: {},
            explicitPathsToArguments: { inviteId: '$[0]' },
            singleArgumentUnchanged: false,
        }, ['inviteId']);
        sideEffects?.onError?.(err);
        throw transformedError;
    }
}
//# sourceMappingURL=identity-invites-v1-site-invite-site-invite.universal.js.map