interface SiteInvite$1 {
    /**
     * Invite ID.
     * @readonly
     */
    id?: string;
    /**
     * Site ID the user is invited to as a collaborator.
     * @readonly
     */
    siteId?: string;
    /** Email address where the invite was sent. */
    email?: string;
    /** Role IDs included in the invite. */
    policyIds?: string[];
    /**
     * Deprecated. Use `inviterAccountId`.
     * @readonly
     * @deprecated
     */
    inviterId?: string;
    /**
     * Invite Status.
     *
     * Supported values:
     * - **Pending:** The invite has been sent and is valid, waiting for the user's response.
     * - **Used:** The invite has been accepted.
     * - **Deleted:** The invite has been deleted or revoked.
     * - **Declined:** The user declined the invite.
     * - **Expired:** The invite has expired without being accepted.
     */
    status?: InviteStatus$1;
    /** Link to accept the invite. */
    acceptLink?: string;
    /**
     * Inviting account ID.
     * @readonly
     */
    inviterAccountId?: string;
    /**
     * Account ID that accepted the invite. Populated only once the invite is accepted.
     * @readonly
     */
    acceptedByAccountId?: string | null;
    /** Date the invite was created. */
    dateCreated?: Date | null;
    /** User's Wix Bookings staff ID, if relevant. */
    staffId?: string | null;
    /** Invite expiration date */
    expirationDate?: Date | null;
}
/** Invite status stating whether the invite was accepted, waiting to be accepted, deleted etc.. */
declare enum InviteStatus$1 {
    Pending = "Pending",
    Used = "Used",
    Deleted = "Deleted",
    Declined = "Declined",
    Expired = "Expired"
}
interface SiteInviteResponse$1 {
    /** Invites that were sent. */
    invite?: SiteInvite$1;
}
interface BulkSiteInviteRequest$1 {
    /** Role IDs, referred to as policy IDs, to assign to the contributors. */
    policyIds: string[];
    /** Email addresses to which the invites should be sent. */
    emails: string[];
    /** Details explaining the purpose of the invite. */
    invitePurpose?: string | null;
    /** Language of emails to send. Relevant only for recipients that don't currently have a Wix user ID. Default: Site owner's language. */
    defaultEmailLanguage?: string | null;
}
interface BulkSiteInviteResponse$1 {
    /** Invites that were sent successfully. */
    invites?: SiteInvite$1[];
    /** Invites that failed. */
    failedEmails?: string[];
}
interface ResendSiteInviteRequest$1 {
    /** Invite ID. */
    inviteId: string;
    /** Language of emails to send. Relevant only for recipients that don't currently have a Wix user ID. Default: Site owner's language. */
    defaultEmailLanguage?: string | null;
}
interface RevokeSiteInviteRequest$1 {
    /** Invite ID. */
    inviteId: string;
}
interface RevokeSiteInviteResponse$1 {
}
interface SiteInviteNonNullableFields$1 {
    id: string;
    siteId: string;
    email: string;
    policyIds: string[];
    inviterId: string;
    status: InviteStatus$1;
    acceptLink: string;
    inviterAccountId: string;
}
interface BulkSiteInviteResponseNonNullableFields$1 {
    invites: SiteInviteNonNullableFields$1[];
    failedEmails: string[];
}
interface SiteInviteResponseNonNullableFields$1 {
    invite?: SiteInviteNonNullableFields$1;
}

interface SiteInvite {
    /**
     * Invite ID.
     * @readonly
     */
    _id?: string;
    /**
     * Site ID the user is invited to as a collaborator.
     * @readonly
     */
    siteId?: string;
    /** Email address where the invite was sent. */
    email?: string;
    /** Role IDs included in the invite. */
    policyIds?: string[];
    /**
     * Deprecated. Use `inviterAccountId`.
     * @readonly
     * @deprecated
     */
    inviterId?: string;
    /**
     * Invite Status.
     *
     * Supported values:
     * - **Pending:** The invite has been sent and is valid, waiting for the user's response.
     * - **Used:** The invite has been accepted.
     * - **Deleted:** The invite has been deleted or revoked.
     * - **Declined:** The user declined the invite.
     * - **Expired:** The invite has expired without being accepted.
     */
    status?: InviteStatus;
    /** Link to accept the invite. */
    acceptLink?: string;
    /**
     * Inviting account ID.
     * @readonly
     */
    inviterAccountId?: string;
    /**
     * Account ID that accepted the invite. Populated only once the invite is accepted.
     * @readonly
     */
    acceptedByAccountId?: string | null;
    /** Date the invite was created. */
    dateCreated?: Date | null;
    /** User's Wix Bookings staff ID, if relevant. */
    staffId?: string | null;
    /** Invite expiration date */
    expirationDate?: Date | null;
}
/** Invite status stating whether the invite was accepted, waiting to be accepted, deleted etc.. */
declare enum InviteStatus {
    Pending = "Pending",
    Used = "Used",
    Deleted = "Deleted",
    Declined = "Declined",
    Expired = "Expired"
}
interface SiteInviteResponse {
    /** Invites that were sent. */
    invite?: SiteInvite;
}
interface BulkSiteInviteRequest {
    /** Role IDs, referred to as policy IDs, to assign to the contributors. */
    policyIds: string[];
    /** Email addresses to which the invites should be sent. */
    emails: string[];
    /** Details explaining the purpose of the invite. */
    invitePurpose?: string | null;
    /** Language of emails to send. Relevant only for recipients that don't currently have a Wix user ID. Default: Site owner's language. */
    defaultEmailLanguage?: string | null;
}
interface BulkSiteInviteResponse {
    /** Invites that were sent successfully. */
    invites?: SiteInvite[];
    /** Invites that failed. */
    failedEmails?: string[];
}
interface ResendSiteInviteRequest {
    /** Invite ID. */
    inviteId: string;
    /** Language of emails to send. Relevant only for recipients that don't currently have a Wix user ID. Default: Site owner's language. */
    defaultEmailLanguage?: string | null;
}
interface RevokeSiteInviteRequest {
    /** Invite ID. */
    inviteId: string;
}
interface RevokeSiteInviteResponse {
}
interface SiteInviteNonNullableFields {
    _id: string;
    siteId: string;
    email: string;
    policyIds: string[];
    inviterId: string;
    status: InviteStatus;
    acceptLink: string;
    inviterAccountId: string;
}
interface BulkSiteInviteResponseNonNullableFields {
    invites: SiteInviteNonNullableFields[];
    failedEmails: string[];
}
interface SiteInviteResponseNonNullableFields {
    invite?: SiteInviteNonNullableFields;
}

type __PublicMethodMetaInfo<K = string, M = unknown, T = unknown, S = unknown, Q = unknown, R = unknown> = {
    getUrl: (context: any) => string;
    httpMethod: K;
    path: string;
    pathParams: M;
    __requestType: T;
    __originalRequestType: S;
    __responseType: Q;
    __originalResponseType: R;
};
declare function bulkInvite(): __PublicMethodMetaInfo<'POST', {}, BulkSiteInviteRequest, BulkSiteInviteRequest$1, BulkSiteInviteResponse & BulkSiteInviteResponseNonNullableFields, BulkSiteInviteResponse$1 & BulkSiteInviteResponseNonNullableFields$1>;
declare function resendInvite(): __PublicMethodMetaInfo<'POST', {
    inviteId: string;
}, ResendSiteInviteRequest, ResendSiteInviteRequest$1, SiteInviteResponse & SiteInviteResponseNonNullableFields, SiteInviteResponse$1 & SiteInviteResponseNonNullableFields$1>;
declare function revokeInvite(): __PublicMethodMetaInfo<'POST', {
    inviteId: string;
}, RevokeSiteInviteRequest, RevokeSiteInviteRequest$1, RevokeSiteInviteResponse, RevokeSiteInviteResponse$1>;

export { type __PublicMethodMetaInfo, bulkInvite, resendInvite, revokeInvite };
